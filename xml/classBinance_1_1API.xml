<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classBinance_1_1API" kind="class" prot="public">
    <compoundname>Binance::API</compoundname>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBinance_1_1API_1ac863e52396757997d84e6783b5336828" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$base</definition>
        <argsstring></argsstring>
        <name>$base</name>
        <initializer>= &apos;https://api.binance.com/api/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="31" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a52a5376574ff759fb1df6c8efe24cb7f" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$wapi</definition>
        <argsstring></argsstring>
        <name>$wapi</name>
        <initializer>= &apos;https://api.binance.com/wapi/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="32" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a0ce2df2282110071b78061c3043200af" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$stream</definition>
        <argsstring></argsstring>
        <name>$stream</name>
        <initializer>= &apos;wss://stream.binance.com:9443/ws/&apos;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="33" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a4b70fc1796d52440e44423da2cbafca5" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$api_key</definition>
        <argsstring></argsstring>
        <name>$api_key</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="34" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a5612f3068ec5843031812893537e7677" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$api_secret</definition>
        <argsstring></argsstring>
        <name>$api_secret</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="35" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a69d62e886266a59b0a314cb4f5f164ca" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$depthCache</definition>
        <argsstring></argsstring>
        <name>$depthCache</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="36" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="36" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1ab04600479e07a4af0ead9ba84772bde1" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$depthQueue</definition>
        <argsstring></argsstring>
        <name>$depthQueue</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="37" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1aaa75d873054290eecf1dd2876237a279" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$chartQueue</definition>
        <argsstring></argsstring>
        <name>$chartQueue</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="38" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a0c2d0cd199527b3b275143c49d91702e" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$charts</definition>
        <argsstring></argsstring>
        <name>$charts</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="39" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1ace9645947686e99baf916e3bc189aeaf" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$curlOpts</definition>
        <argsstring></argsstring>
        <name>$curlOpts</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="40" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a8d15ac7cb74ac52f8f008e61aa7cab89" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$info</definition>
        <argsstring></argsstring>
        <name>$info</name>
        <initializer>= [
        &quot;timeOffset&quot; =&gt; 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="41" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="41" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a1415587257942c2b5af22c642ff58005" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$proxyConf</definition>
        <argsstring></argsstring>
        <name>$proxyConf</name>
        <initializer>= null</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="44" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="44" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1abeabeb044e83a23ad58bdcfa57e73d47" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$caOverride</definition>
        <argsstring></argsstring>
        <name>$caOverride</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="45" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="45" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1ac40776b871ae1591348c96162e872789" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$transfered</definition>
        <argsstring></argsstring>
        <name>$transfered</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="46" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a69a4bfc5a6773dff1d01166dfbb402a2" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$requestCount</definition>
        <argsstring></argsstring>
        <name>$requestCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="47" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classBinance_1_1API_1aaaf9a901342001f8734bfab6ba505205" prot="private" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$httpDebug</definition>
        <argsstring></argsstring>
        <name>$httpDebug</name>
        <initializer>= false</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="48" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a858ac2cec1de7719779b6c517adcb0bf" prot="private" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$subscriptions</definition>
        <argsstring></argsstring>
        <name>$subscriptions</name>
        <initializer>= []</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="49" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1af80ef162a101ffa0963d977126d6811d" prot="private" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$btc_value</definition>
        <argsstring></argsstring>
        <name>$btc_value</name>
        <initializer>= 0.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="50" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="50" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a80f67dda302da9465596ad5e0bd86ce2" prot="private" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$btc_total</definition>
        <argsstring></argsstring>
        <name>$btc_total</name>
        <initializer>= 0.00</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="51" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="51" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBinance_1_1API_1adbaefdc26d86ac1fd69ad101e0905c78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::__construct</definition>
        <argsstring>()</argsstring>
        <name>__construct</name>
        <briefdescription>
<para>Constructor for the class, send as many argument as you want. </para>        </briefdescription>
        <detaileddescription>
<para>No arguments - use file setup 1 argument - file to load config from 2 arguments - api key and api secret</para><para><simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="65" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="65" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa48130f98262fb73c42b90837a39ee9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::__get</definition>
        <argsstring>(string $member)</argsstring>
        <name>__get</name>
        <param>
          <type>string</type>
          <declname>$member</declname>
        </param>
        <briefdescription>
<para>magic get for private and protected members </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$file</parametername>
</parameternamelist>
<parameterdescription>
<para>string the name of the property to return </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="94" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="94" bodyend="100"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a0c51e059d275539f7591ae1886787916" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::__set</definition>
        <argsstring>(string $member, $value)</argsstring>
        <name>__set</name>
        <param>
          <type>string</type>
          <declname>$member</declname>
        </param>
        <param>
          <declname>$value</declname>
        </param>
        <briefdescription>
<para>magic set for private and protected members </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$member</parametername>
</parameternamelist>
<parameterdescription>
<para>string the name of the member property </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$value</parametername>
</parameternamelist>
<parameterdescription>
<para>the value of the member property </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="108" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="108" bodyend="111"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a98bf564a5ff752a2393bc626b222905e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::buy</definition>
        <argsstring>(string $symbol, $quantity, $price, string $type=&quot;LIMIT&quot;, array $flags=[])</argsstring>
        <name>buy</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>buy attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER </para>        </briefdescription>
        <detaileddescription>
<para>You should check the <simplesect kind="see"><para>exchangeInfo for each currency to determine what types of orders can be placed against specific pairs</para></simplesect>
$quantity = 1; $price = 0.0005; $order = $api-&gt;buy(&quot;BNBBTC&quot;, $quantity, $price);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>string price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>string type of order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="227" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="227" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a9e199a90097fbee4e89e2777534599b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::buyTest</definition>
        <argsstring>(string $symbol, $quantity, $price, string $type=&quot;LIMIT&quot;, array $flags=[])</argsstring>
        <name>buyTest</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>buyTest attempts to create a TEST currency order </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>buy()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>string price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>string config </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or empty or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="244" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa5d028c98ced18dab5194009f4abdb0e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::sell</definition>
        <argsstring>(string $symbol, $quantity, $price, string $type=&quot;LIMIT&quot;, array $flags=[])</argsstring>
        <name>sell</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>sell attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER </para>        </briefdescription>
        <detaileddescription>
<para>You should check the <simplesect kind="see"><para>exchangeInfo for each currency to determine what types of orders can be placed against specific pairs</para></simplesect>
$quantity = 1; $price = 0.0005; $order = $api-&gt;sell(&quot;BNBBTC&quot;, $quantity, $price);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>string price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>string type of order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="274" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="274" bodyend="277"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a67841995467768588781cde190e59235" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::sellTest</definition>
        <argsstring>(string $symbol, $quantity, $price, string $type=&quot;LIMIT&quot;, array $flags=[])</argsstring>
        <name>sellTest</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>sellTest attempts to create a TEST currency order </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>sell()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>string price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or empty or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="291" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="291" bodyend="294"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa6156e4c8d03bbdd8c16bbb18ea75646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketBuy</definition>
        <argsstring>(string $symbol, $quantity, array $flags=[])</argsstring>
        <name>marketBuy</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketBuy attempts to create a currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para>$quantity = 1; $order = $api-&gt;marketBuy(&quot;BNBBTC&quot;, $quantity);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="307" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="307" bodyend="310"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ad11565e34ba1c715ac2478ee7f9aab6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketBuyTest</definition>
        <argsstring>(string $symbol, $quantity, array $flags=[])</argsstring>
        <name>marketBuyTest</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketBuyTest attempts to create a TEST currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>marketBuy()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="322" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="322" bodyend="325"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a72d07ceea281b273d65a487efc02e31e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketSell</definition>
        <argsstring>(string $symbol, $quantity, array $flags=[])</argsstring>
        <name>marketSell</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketSell attempts to create a currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para>$quantity = 1; $order = $api-&gt;marketSell(&quot;BNBBTC&quot;, $quantity);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="338" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="338" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a77eaa982d0ca78fbce80d6203213af28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketSellTest</definition>
        <argsstring>(string $symbol, $quantity, array $flags=[])</argsstring>
        <name>marketSellTest</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketSellTest attempts to create a TEST currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>marketSellTest()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="353" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="353" bodyend="356"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ac49c3595190e193510eb368c0fa92992" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::cancel</definition>
        <argsstring>(string $symbol, $orderid)</argsstring>
        <name>cancel</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$orderid</declname>
        </param>
        <briefdescription>
<para>cancel attempts to cancel a currency order </para>        </briefdescription>
        <detaileddescription>
<para>$orderid = &quot;123456789&quot;; $order = $api-&gt;cancel(&quot;BNBBTC&quot;, $orderid);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$orderid</parametername>
</parameternamelist>
<parameterdescription>
<para>string the orderid to cancel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="369" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="369" bodyend="375"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ae7eae3f9588c2aee0d3c46bb9fa2ffe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::orderStatus</definition>
        <argsstring>(string $symbol, $orderid)</argsstring>
        <name>orderStatus</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$orderid</declname>
        </param>
        <briefdescription>
<para>orderStatus attempts to get orders status </para>        </briefdescription>
        <detaileddescription>
<para>$orderid = &quot;123456789&quot;; $order = $api-&gt;orderStatus(&quot;BNBBTC&quot;, $orderid);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$orderid</parametername>
</parameternamelist>
<parameterdescription>
<para>string the orderid to cancel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="388" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="388" bodyend="394"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a155a0a0d36ea7145f5833d9f17386335" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::openOrders</definition>
        <argsstring>(string $symbol=null)</argsstring>
        <name>openOrders</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>openOrders attempts to get open orders for all currencies or a specific currency </para>        </briefdescription>
        <detaileddescription>
<para>$allOpenOrders = $api-&gt;openOrders(); $allBNBOrders = $api-&gt;openOrders( &quot;BNBBTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="406" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="406" bodyend="415"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa1b445b6eb144e0c551fbe035737dbf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::orders</definition>
        <argsstring>(string $symbol, int $limit=500, int $fromOrderId=1)</argsstring>
        <name>orders</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$limit</declname>
          <defval>500</defval>
        </param>
        <param>
          <type>int</type>
          <declname>$fromOrderId</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>orders attempts to get the orders for all or a specific currency </para>        </briefdescription>
        <detaileddescription>
<para>$allBNBOrders = $api-&gt;orders( &quot;BNBBTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>int the amount of orders returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$fromOrderId</parametername>
</parameternamelist>
<parameterdescription>
<para>string return the orders from this order onwards </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of orderDetails array </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="428" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="428" bodyend="435"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a91842828e25805fe9a6fd51391566386" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::history</definition>
        <argsstring>(string $symbol, int $limit=500, int $fromTradeId=-1)</argsstring>
        <name>history</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$limit</declname>
          <defval>500</defval>
        </param>
        <param>
          <type>int</type>
          <declname>$fromTradeId</declname>
          <defval>-1</defval>
        </param>
        <briefdescription>
<para>history Get the complete account trade history for all or a specific currency </para>        </briefdescription>
        <detaileddescription>
<para>$allHistory = $api-&gt;history(); $BNBHistory = $api-&gt;history(&quot;BNBBTC&quot;); $limitBNBHistory = $api-&gt;history(&quot;BNBBTC&quot;,5); $limitBNBHistoryFromId = $api-&gt;history(&quot;BNBBTC&quot;,5,3);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>int the amount of orders returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$fromTradeId</parametername>
</parameternamelist>
<parameterdescription>
<para>int (optional) return the orders from this order onwards. negative for all </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of orderDetails array </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="451" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="451" bodyend="462"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1abcc2a5c9ca76dd659db43aec7a0a9a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::useServerTime</definition>
        <argsstring>()</argsstring>
        <name>useServerTime</name>
        <briefdescription>
<para>useServerTime adds the &apos;useServerTime&apos;=&gt;true to the API request to avoid time errors </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;useServerTime();</para><para><simplesect kind="return"><para>null </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="472" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="472" bodyend="478"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1afd72d19a5504b1a0a694ca9a8af1047b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::time</definition>
        <argsstring>()</argsstring>
        <name>time</name>
        <briefdescription>
<para>time Gets the server time </para>        </briefdescription>
        <detaileddescription>
<para>$time = $api-&gt;time();</para><para><simplesect kind="return"><para>array with error message or array with server time key </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="488" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="488" bodyend="491"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a944f676d29829384ea8eca179fe9ca5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::exchangeInfo</definition>
        <argsstring>()</argsstring>
        <name>exchangeInfo</name>
        <briefdescription>
<para>exchangeInfo Gets the complete exchange info, including limits, currency options etc. </para>        </briefdescription>
        <detaileddescription>
<para>$info = $api-&gt;exchangeInfo();</para><para><simplesect kind="return"><para>array with error message or exchange info array </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="501" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="501" bodyend="504"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ab69047e208ca2a148f97120d518ecd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::withdraw</definition>
        <argsstring>(string $asset, string $address, $amount, $addressTag=null)</argsstring>
        <name>withdraw</name>
        <param>
          <type>string</type>
          <declname>$asset</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$address</declname>
        </param>
        <param>
          <declname>$amount</declname>
        </param>
        <param>
          <declname>$addressTag</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>withdraw requests a asset be withdrawn from binance to another wallet </para>        </briefdescription>
        <detaileddescription>
<para>$asset = &quot;BTC&quot;; $address = &quot;1C5gqLRs96Xq4V2ZZAR1347yUCpHie7sa&quot;; $amount = 0.2; $response = $api-&gt;withdraw($asset, $address, $amount);</para><para>$address = &quot;44tLjmXrQNrWJ5NBsEj2R77ZBEgDa3fEe9GLpSf2FRmhexPvfYDUAB7EXX1Hdb3aMQ9FLqdJ56yaAhiXoRsceGJCRS3Jxkn&quot;; $addressTag = &quot;0e5e38a01058dbf64e53a4333a5acf98e0d5feb8e523d32e3186c664a9c762c1&quot;; $amount = 0.1; $response = $api-&gt;withdraw($asset, $address, $amount, $addressTag);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency such as BTC </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$address</parametername>
</parameternamelist>
<parameterdescription>
<para>string the addressed to whihc the asset should be deposited </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$amount</parametername>
</parameternamelist>
<parameterdescription>
<para>double the amount of the asset to transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$addressTag</parametername>
</parameternamelist>
<parameterdescription>
<para>string adtional transactionid required by some assets </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array transaction </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="526" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="526" bodyend="539"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a40614aa2f9799c1197919812b37e6061" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depositAddress</definition>
        <argsstring>(string $asset)</argsstring>
        <name>depositAddress</name>
        <param>
          <type>string</type>
          <declname>$asset</declname>
        </param>
        <briefdescription>
<para>depositAddress get the deposit address for an asset </para>        </briefdescription>
        <detaileddescription>
<para>$depositAddress = $api-&gt;depositAddress(&quot;VEN&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>string the currency such as BTC </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array deposit address information </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="550" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="550" bodyend="557"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ac1e40c1bef7a768365d1e123d2324d5d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depositHistory</definition>
        <argsstring>(string $asset=null, array $params=[])</argsstring>
        <name>depositHistory</name>
        <param>
          <type>string</type>
          <declname>$asset</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$params</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>depositAddress get the deposit history for an asset </para>        </briefdescription>
        <detaileddescription>
<para>$depositHistory = $api-&gt;depositHistory();</para><para>$depositHistory = $api-&gt;depositHistory( &quot;BTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>string empty or the currency such as BTC </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$params</parametername>
</parameternamelist>
<parameterdescription>
<para>array optional startTime, endTime, status parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array deposit history information </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="571" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="571" bodyend="578"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ac58d133afd56809f520aeb05e12b69d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::withdrawHistory</definition>
        <argsstring>(string $asset=null, array $params=[])</argsstring>
        <name>withdrawHistory</name>
        <param>
          <type>string</type>
          <declname>$asset</declname>
          <defval>null</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$params</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>withdrawHistory get the withdrawal history for an asset </para>        </briefdescription>
        <detaileddescription>
<para>$withdrawHistory = $api-&gt;withdrawHistory();</para><para>$withdrawHistory = $api-&gt;withdrawHistory( &quot;BTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>string empty or the currency such as BTC </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$params</parametername>
</parameternamelist>
<parameterdescription>
<para>array optional startTime, endTime, status parameters </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array deposit history information </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="592" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="592" bodyend="599"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a6b849844ef3f827d8144ae8e129978b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::withdrawFee</definition>
        <argsstring>(string $asset)</argsstring>
        <name>withdrawFee</name>
        <param>
          <type>string</type>
          <declname>$asset</declname>
        </param>
        <briefdescription>
<para>withdrawFee get the withdrawal fee for an asset </para>        </briefdescription>
        <detaileddescription>
<para>$withdrawFee = $api-&gt;withdrawFee( &quot;BTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>string currency such as BTC </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array containing withdrawFee </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="610" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="610" bodyend="617"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a718271dc0691ae3a1f60dc0e7ad89698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::prices</definition>
        <argsstring>()</argsstring>
        <name>prices</name>
        <briefdescription>
<para>prices get all the current prices </para>        </briefdescription>
        <detaileddescription>
<para>$ticker = $api-&gt;prices();</para><para><simplesect kind="return"><para>array with error message or array of all the currencies prices </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="627" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="627" bodyend="630"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa1e851e6a5fe2e01f7c5493fa9b90c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::bookPrices</definition>
        <argsstring>()</argsstring>
        <name>bookPrices</name>
        <briefdescription>
<para>bookPrices get all bid/asks prices </para>        </briefdescription>
        <detaileddescription>
<para>$ticker = $api-&gt;bookPrices();</para><para><simplesect kind="return"><para>array with error message or array of all the book prices </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="640" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="640" bodyend="643"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a14272f6a80009bc8fd742b5f35fee9a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::account</definition>
        <argsstring>()</argsstring>
        <name>account</name>
        <briefdescription>
<para>account get all information about the api account </para>        </briefdescription>
        <detaileddescription>
<para>$account = $api-&gt;account();</para><para><simplesect kind="return"><para>array with error message or array of all the account information </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="653" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="653" bodyend="656"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a884414d58f6297f79afe94a60dc0d794" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::prevDay</definition>
        <argsstring>(string $symbol=null)</argsstring>
        <name>prevDay</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>prevDay get 24hr ticker price change statistics for symbols </para>        </briefdescription>
        <detaileddescription>
<para>$prevDay = $api-&gt;prevDay(&quot;BNBBTC&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) symbol to get the previous day change for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of prevDay change </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="667" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="667" bodyend="676"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1af047ce7afeff0729b62fb28b2697ad9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::aggTrades</definition>
        <argsstring>(string $symbol)</argsstring>
        <name>aggTrades</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <briefdescription>
<para>aggTrades get Market History / Aggregate Trades </para>        </briefdescription>
        <detaileddescription>
<para>$trades = $api-&gt;aggTrades(&quot;BNBBTC&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the symbol to get the trade information for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of market history </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="687" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="687" bodyend="692"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ac36901dbea220b2401786a6d1bc4d051" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depth</definition>
        <argsstring>(string $symbol)</argsstring>
        <name>depth</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <briefdescription>
<para>depth get Market depth </para>        </briefdescription>
        <detaileddescription>
<para>$depth = $api-&gt;depth(&quot;ETHBTC&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string the symbol to get the depth information for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of market depth </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="703" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="703" bodyend="717"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1afe968feb47f5b68853dae571cb75800c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::balances</definition>
        <argsstring>($priceData=false)</argsstring>
        <name>balances</name>
        <param>
          <declname>$priceData</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>balances get balances for the account assets </para>        </briefdescription>
        <detaileddescription>
<para>$balances = $api-&gt;balances($ticker);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>bool</parametertype>
<parametername>$priceData</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the symbols balances are required for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of balances </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="728" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="728" bodyend="745"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1af1d41534a9f67bc74a6133efa2df4df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::getProxyUriString</definition>
        <argsstring>()</argsstring>
        <name>getProxyUriString</name>
        <briefdescription>
<para>getProxyUriString get Uniform Resource Identifier string assocaited with proxy config </para>        </briefdescription>
        <detaileddescription>
<para>$balances = $api-&gt;getProxyUriString();</para><para><simplesect kind="return"><para>string uri </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="754" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="754" bodyend="789"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a3647415e517c745a35d2d54bb27575fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::setProxy</definition>
        <argsstring>(array $proxyconf)</argsstring>
        <name>setProxy</name>
        <param>
          <type>array</type>
          <declname>$proxyconf</declname>
        </param>
        <briefdescription>
<para>setProxy set proxy config by passing in an array of the proxy configuration </para>        </briefdescription>
        <detaileddescription>
<para>$proxyConf = [ &apos;proto&apos; =&gt; &apos;tcp&apos;, &apos;address&apos; =&gt; &apos;192.168.1.1&apos;, &apos;port&apos; =&gt; &apos;8080&apos;, &apos;user&apos; =&gt; &apos;dude&apos;, &apos;pass&apos; =&gt; &apos;d00d&apos; ];</para><para>$api-&gt;setProxy( $proxyconf );</para><para><simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="806" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="806" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a40e8ddf7280b33b1899f59d0f16e5fa0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::order</definition>
        <argsstring>(string $side, string $symbol, $quantity, $price, string $type=&quot;LIMIT&quot;, array $flags=[], bool $test=false)</argsstring>
        <name>order</name>
        <param>
          <type>string</type>
          <declname>$side</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>$test</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>order formats the orders before sending them to the curl wrapper function You can call this function directly or use the helper functions </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>buy() </para><simplesectsep/><para>sell() </para><simplesectsep/><para>marketBuy() </para><simplesectsep/><para>marketSell() $this-&gt;httpRequest( &quot;https://api.binance.com/api/v1/ticker/24hr&quot;);</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$side</parametername>
</parameternamelist>
<parameterdescription>
<para>string typically &quot;BUY&quot; or &quot;SELL&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string to buy or sell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>string in the order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>string for the order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>string is determined by the symbol bu typicall LIMIT, STOP_LOSS_LIMIT etc. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array additional transaction options </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$test</parametername>
</parameternamelist>
<parameterdescription>
<para>bool whether to test or not, test only validates the query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="958" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="958" bodyend="1004"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a8273c4cc5c3226aa46e5aee6a69a58aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::candlesticks</definition>
        <argsstring>(string $symbol, string $interval=&quot;5m&quot;, int $limit=null, $startTime=null, $endTime=null)</argsstring>
        <name>candlesticks</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$interval</declname>
          <defval>&quot;5m&quot;</defval>
        </param>
        <param>
          <type>int</type>
          <declname>$limit</declname>
          <defval>null</defval>
        </param>
        <param>
          <declname>$startTime</declname>
          <defval>null</defval>
        </param>
        <param>
          <declname>$endTime</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>candlesticks get the candles for the given intervals 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M </para>        </briefdescription>
        <detaileddescription>
<para>$candles = $api-&gt;candlesticks(&quot;BNBBTC&quot;, &quot;5m&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>string to request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>int limit the amount of candles </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$startTime</parametername>
</parameternamelist>
<parameterdescription>
<para>string request candle information starting from here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$endTime</parametername>
</parameternamelist>
<parameterdescription>
<para>string request candle information ending here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1020" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1020" bodyend="1057"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a00d93784ab9eb83c3817ccaa75e9746d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::cumulative</definition>
        <argsstring>(array $depth)</argsstring>
        <name>cumulative</name>
        <param>
          <type>array</type>
          <declname>$depth</declname>
        </param>
        <briefdescription>
<para>cumulative Converts depth cache into a cumulative array </para>        </briefdescription>
        <detaileddescription>
<para>$cumulative = $api-&gt;cumulative($depth);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$depth</parametername>
</parameternamelist>
<parameterdescription>
<para>array cache array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array cumulative depth cache </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1343" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1343" bodyend="1367"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a5eaa9d36db8181fc4605a3841f1106ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::highstock</definition>
        <argsstring>(array $chart, bool $include_volume=false)</argsstring>
        <name>highstock</name>
        <param>
          <type>array</type>
          <declname>$chart</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>$include_volume</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>highstock Converts Chart Data into array for highstock &amp; kline charts </para>        </briefdescription>
        <detaileddescription>
<para>$highstock = $api-&gt;highstock($chart, $include_volume);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$chart</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$include_volume</parametername>
</parameternamelist>
<parameterdescription>
<para>bool for inclusion of volume </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array highchart data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1378" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1378" bodyend="1396"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a53fcf31d85faa8445653f581fdbdb72c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::first</definition>
        <argsstring>(array $array)</argsstring>
        <name>first</name>
        <param>
          <type>array</type>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>first Gets first key of an array </para>        </briefdescription>
        <detaileddescription>
<para>$first = $api-&gt;first($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string key or null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1406" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1406" bodyend="1412"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a468092e1edfd35f79954236714c825c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::last</definition>
        <argsstring>(array $array)</argsstring>
        <name>last</name>
        <param>
          <type>array</type>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>last Gets last key of an array </para>        </briefdescription>
        <detaileddescription>
<para>$last = $api-&gt;last($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string key or null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1422" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1422" bodyend="1428"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a184430be210c8e5cb7be80c9e239619f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::displayDepth</definition>
        <argsstring>(array $array)</argsstring>
        <name>displayDepth</name>
        <param>
          <type>array</type>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>displayDepth Formats nicely for console output </para>        </briefdescription>
        <detaileddescription>
<para>$outputString = $api-&gt;displayDepth($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string of the depth information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1438" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1438" bodyend="1459"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ae1688d4d245b8f22a87c7afb1db5432a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::getTransfered</definition>
        <argsstring>()</argsstring>
        <name>getTransfered</name>
        <briefdescription>
<para>getTransfered gets the total transfered in b,Kb,Mb,Gb </para>        </briefdescription>
        <detaileddescription>
<para>$transfered = $api-&gt;getTransfered();</para><para><simplesect kind="return"><para>string showing the total transfered </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1492" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1492" bodyend="1503"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1abfb76ae473557ff989bee3287d3c437c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::getRequestCount</definition>
        <argsstring>()</argsstring>
        <name>getRequestCount</name>
        <briefdescription>
<para>getRequestCount gets the total number of API calls </para>        </briefdescription>
        <detaileddescription>
<para>$apiCount = $api-&gt;getRequestCount();</para><para><simplesect kind="return"><para>int get the total number of api calls </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1512" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1512" bodyend="1515"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a90daef87526a753473580139c04d311b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::addToTransfered</definition>
        <argsstring>(int $int)</argsstring>
        <name>addToTransfered</name>
        <param>
          <type>int</type>
          <declname>$int</declname>
        </param>
        <briefdescription>
<para>addToTransfered add interger bytes to the total transfered also incrementes the api counter </para>        </briefdescription>
        <detaileddescription>
<para>$apiCount = $api-&gt;addToTransfered( $int );</para><para><simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1525" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1525" bodyend="1529"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a61742a5bdff7fc2119ab8b797c0cef4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::sortDepth</definition>
        <argsstring>(string $symbol, int $limit=11)</argsstring>
        <name>sortDepth</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>int</type>
          <declname>$limit</declname>
          <defval>11</defval>
        </param>
        <briefdescription>
<para>sortDepth Sorts depth data for display &amp; getting highest bid and lowest ask </para>        </briefdescription>
        <detaileddescription>
<para>$sorted = $api-&gt;sortDepth($symbol, $limit);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string to sort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>int depth </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1613" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1613" bodyend="1623"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a179ddfeb9d6469f43f56f4415e226ca0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depthCache</definition>
        <argsstring>($symbols, callable $callback)</argsstring>
        <name>depthCache</name>
        <param>
          <declname>$symbols</declname>
        </param>
        <param>
          <type>callable</type>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>depthCache Pulls /depth data and subscribes to  WebSocket endpoint Maintains a local Depth Cache in sync via lastUpdateId. </para>        </briefdescription>
        <detaileddescription>
<para>See depth() and depthHandler()</para><para>$api-&gt;depthCache([&quot;BNBBTC&quot;], function($api, $symbol, $depth) { echo &quot;{$symbol} depth cache update&quot;.PHP_EOL; //print_r($depth); // Print all depth data $limit = 11; // Show only the closest asks/bids $sorted = $api-&gt;sortDepth($symbol, $limit); $bid = $api-&gt;first($sorted[&apos;bids&apos;]); $ask = $api-&gt;first($sorted[&apos;asks&apos;]); echo $api-&gt;displayDepth($sorted); echo &quot;ask: {$ask}&quot;.PHP_EOL; echo &quot;bid: {$bid}&quot;.PHP_EOL; });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string optional array of symbols </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1646" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1646" bodyend="1712"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a77611c0cbe2d55dc04239274769e2de9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::trades</definition>
        <argsstring>($symbols, callable $callback)</argsstring>
        <name>trades</name>
        <param>
          <declname>$symbols</declname>
        </param>
        <param>
          <type>callable</type>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>trades Trades WebSocket Endpoint </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;trades([&quot;BNBBTC&quot;], function($api, $symbol, $trades) { echo &quot;{$symbol} trades update&quot;.PHP_EOL; print_r($trades); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbols</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1726" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1726" bodyend="1781"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a67bb7518406ed697a1e476f22ed78bf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::ticker</definition>
        <argsstring>($symbol, callable $callback)</argsstring>
        <name>ticker</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>callable</type>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>ticker pulls 24h price change statistics via WebSocket </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;ticker(false, function($api, $symbol, $ticker) { print_r($ticker); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string optional symbol or false </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1794" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1794" bodyend="1828"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a2d4a65cde999da48f82c29e989133ac3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::chart</definition>
        <argsstring>($symbols, string $interval=&quot;30m&quot;, callable $callback)</argsstring>
        <name>chart</name>
        <param>
          <declname>$symbols</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$interval</declname>
          <defval>&quot;30m&quot;</defval>
        </param>
        <param>
          <type>callable</type>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>chart Pulls /kline data and subscribes to  WebSocket endpoint </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;chart([&quot;BNBBTC&quot;], &quot;15m&quot;, function($api, $symbol, $chart) { echo &quot;{$symbol} chart update\n&quot;; print_r($chart); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>string required symbols </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>string time inteval </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1844" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1844" bodyend="1909"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a33e3e2b84393ad729ce3639004970254" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::kline</definition>
        <argsstring>($symbols, string $interval=&quot;30m&quot;, callable $callback)</argsstring>
        <name>kline</name>
        <param>
          <declname>$symbols</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$interval</declname>
          <defval>&quot;30m&quot;</defval>
        </param>
        <param>
          <type>callable</type>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>kline Subscribes to  WebSocket endpoint for latest chart data only </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;kline([&quot;BNBBTC&quot;], &quot;15m&quot;, function($api, $symbol, $chart) { echo &quot;{$symbol} chart update\n&quot;; print_r($chart); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>string required symbols </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>string time inteval </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1925" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1925" bodyend="1963"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a67ed560d60527ad64f16253069cb1b14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::terminate</definition>
        <argsstring>($endpoint)</argsstring>
        <name>terminate</name>
        <param>
          <declname>$endpoint</declname>
        </param>
        <briefdescription>
<para>terminate Terminates websocket endpoints. </para>        </briefdescription>
        <detaileddescription>
<para>View endpoints first: print_r($api-&gt;subscriptions)</para><para>$api-&gt;terminate(&apos;ethbtc_kline@5m&apos;);</para><para><simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1972" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1972" bodyend="1976"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a2a29ca9ab18d04ff2e42aa6e5e0ce312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::keepAlive</definition>
        <argsstring>()</argsstring>
        <name>keepAlive</name>
        <briefdescription>
<para>keepAlive Keep-alive function for userDataStream </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;keepAlive();</para><para><simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1985" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1985" bodyend="1993"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1af033a40a6a86ad422c58d67dc57bb0fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::userData</definition>
        <argsstring>(&amp;$balance_callback, &amp;$execution_callback=false)</argsstring>
        <name>userData</name>
        <param>
          <type>&amp;</type>
          <declname>$balance_callback</declname>
        </param>
        <param>
          <type>&amp;</type>
          <declname>$execution_callback</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>userData Issues userDataStream token and keepalive, subscribes to userData WebSocket </para>        </briefdescription>
        <detaileddescription>
<para>$balance_update = function($api, $balances) { print_r($balances); echo &quot;Balance update&quot;.PHP_EOL; };</para><para>$order_update = function($api, $report) { echo &quot;Order update&quot;.PHP_EOL; print_r($report); $price = $report[&apos;price&apos;]; $quantity = $report[&apos;quantity&apos;]; $symbol = $report[&apos;symbol&apos;]; $side = $report[&apos;side&apos;]; $orderType = $report[&apos;orderType&apos;]; $orderId = $report[&apos;orderId&apos;]; $orderStatus = $report[&apos;orderStatus&apos;]; $executionType = $report[&apos;orderStatus&apos;]; if( $executionType == &quot;NEW&quot; ) { if( $executionType == &quot;REJECTED&quot; ) { echo &quot;Order Failed! Reason: {$report[&apos;rejectReason&apos;]}&quot;.PHP_EOL; } echo &quot;{$symbol} {$side} {$orderType} ORDER #{$orderId} ({$orderStatus})&quot;.PHP_EOL; echo &quot;..price: {$price}, quantity: {$quantity}&quot;.PHP_EOL; return; }</para><para>//NEW, CANCELED, REPLACED, REJECTED, TRADE, EXPIRED echo &quot;{$symbol} {$side} {$executionType} {$orderType} ORDER #{$orderId}&quot;.PHP_EOL; }; $api-&gt;userData($balance_update, $order_update);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$balance_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>bool</parametertype>
<parametername>$execution_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="2033" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="2033" bodyend="2072"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1af115a75377eb89f33d7beb488f5bb7c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::miniTicker</definition>
        <argsstring>(callable $callback)</argsstring>
        <name>miniTicker</name>
        <param>
          <type>callable</type>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>miniTicker Get miniTicker for all symbols </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;miniTicker(function($api, $ticker) { print_r($ticker); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>callable function closer that takes 2 arguments, $pai and $ticker data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="2084" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="2084" bodyend="2123"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBinance_1_1API_1ace1a4cd10b0239f40d0b89daf8fd67cf" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::setupApiConfigFromFile</definition>
        <argsstring>(string $file=null)</argsstring>
        <name>setupApiConfigFromFile</name>
        <param>
          <type>string</type>
          <declname>$file</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>If no paramaters are supplied in the constructor, this function will attempt to load the api_key and api_secret from the users home directory in the file ~/jaggedsoft/php-binance-api.json. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$file</parametername>
</parameternamelist>
<parameterdescription>
<para>string file location </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="121" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="121" bodyend="136"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a012f48621ba42ff06159cbc3024f20e9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::setupCurlOptsFromFile</definition>
        <argsstring>(string $file=null)</argsstring>
        <name>setupCurlOptsFromFile</name>
        <param>
          <type>string</type>
          <declname>$file</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>If no paramaters are supplied in the constructor, this function will attempt to load the acurlopts from the users home directory in the file ~/jaggedsoft/php-binance-api.json. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$file</parametername>
</parameternamelist>
<parameterdescription>
<para>string file location </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="146" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="146" bodyend="160"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a1531b3a71a673f021898a1ab11a941ab" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::setupProxyConfigFromFile</definition>
        <argsstring>(string $file=null)</argsstring>
        <name>setupProxyConfigFromFile</name>
        <param>
          <type>string</type>
          <declname>$file</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>If no paramaters are supplied in the constructor for the proxy confguration, this function will attempt to load the proxy info from the users home directory ~/jaggedsoft/php-binance-api.json. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="169" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="169" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a528767b0c2347b228d2c28f2d20f5590" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::httpRequest</definition>
        <argsstring>(string $url, string $method=&quot;GET&quot;, array $params=[], bool $signed=false)</argsstring>
        <name>httpRequest</name>
        <param>
          <type>string</type>
          <declname>$url</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$method</declname>
          <defval>&quot;GET&quot;</defval>
        </param>
        <param>
          <type>array</type>
          <declname>$params</declname>
          <defval>[]</defval>
        </param>
        <param>
          <type>bool</type>
          <declname>$signed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>httpRequest curl wrapper for all http api requests. </para>        </briefdescription>
        <detaileddescription>
<para>You can&apos;t call this function directly, use the helper functions</para><para><simplesect kind="see"><para>buy() </para><simplesectsep/><para>sell() </para><simplesectsep/><para>marketBuy() </para><simplesectsep/><para>marketSell() $this-&gt;httpRequest( &quot;https://api.binance.com/api/v1/ticker/24hr&quot;);</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$url</parametername>
</parameternamelist>
<parameterdescription>
<para>string the endpoint to query, typically includes query string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$method</parametername>
</parameternamelist>
<parameterdescription>
<para>string this should be typically GET, POST or DELETE </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$params</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for the request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$signed</parametername>
</parameternamelist>
<parameterdescription>
<para>bool true or false sign the request with api secret </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
<parameterlist kind="exception"><parameteritem>
<parameternamelist>
<parametername>\Exception</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="827" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="827" bodyend="937"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a84057ee146e075eec54be8c5e780e159" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::balanceData</definition>
        <argsstring>(array $array, $priceData)</argsstring>
        <name>balanceData</name>
        <param>
          <type>array</type>
          <declname>$array</declname>
        </param>
        <param>
          <declname>$priceData</declname>
        </param>
        <briefdescription>
<para>balanceData Converts all your balances into a nice array If priceData is passed from $api-&gt;prices() it will add btcValue &amp; btcTotal to each symbol This function sets $btc_value which is your estimated BTC value of all assets combined and $btc_total which includes amount on order </para>        </briefdescription>
        <detaileddescription>
<para>$candles = $api-&gt;candlesticks(&quot;BNBBTC&quot;, &quot;5m&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array of your balances </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$priceData</parametername>
</parameternamelist>
<parameterdescription>
<para>array of prices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1070" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1070" bodyend="1135"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ad2eb0a86fd2e6ddfec7ebe93fc74e2c8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::balanceHandler</definition>
        <argsstring>(array $json)</argsstring>
        <name>balanceHandler</name>
        <param>
          <type>array</type>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>balanceHandler Convert balance WebSocket data into array </para>        </briefdescription>
        <detaileddescription>
<para>$data = $this-&gt;balanceHandler( $json );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>array data to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1145" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1145" bodyend="1158"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a6ff65dd6e6b498671740c718f0421aec" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::tickerStreamHandler</definition>
        <argsstring>(\stdClass $json)</argsstring>
        <name>tickerStreamHandler</name>
        <param>
          <type>\stdClass</type>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>tickerStreamHandler Convert WebSocket ticker data into array </para>        </briefdescription>
        <detaileddescription>
<para>$data = $this-&gt;tickerStreamHandler( $json );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>object data to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1168" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1168" bodyend="1195"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aba2c700e43a03db162fc9fb9fc80eb11" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::executionHandler</definition>
        <argsstring>(\stdClass $json)</argsstring>
        <name>executionHandler</name>
        <param>
          <type>\stdClass</type>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>tickerStreamHandler Convert WebSocket trade execution into array </para>        </briefdescription>
        <detaileddescription>
<para>$data = $this-&gt;executionHandler( $json );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametertype>\stdClass</parametertype>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>object data to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1205" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1205" bodyend="1221"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1abfa33a7a2d4300183c2a2b40b82ee21e" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::chartData</definition>
        <argsstring>(string $symbol, string $interval, array $ticks)</argsstring>
        <name>chartData</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$interval</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$ticks</declname>
        </param>
        <briefdescription>
<para>chartData Convert kline data into object </para>        </briefdescription>
        <detaileddescription>
<para>$object = $this-&gt;chartData($symbol, $interval, $ticks);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string of your currency </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>string the time interval </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the canbles array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array object of the chartdata </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1233" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1233" bodyend="1268"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a89985a26a01e91bf449bc4ccad2eef29" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::tradesData</definition>
        <argsstring>(array $trades)</argsstring>
        <name>tradesData</name>
        <param>
          <type>array</type>
          <declname>$trades</declname>
        </param>
        <briefdescription>
<para>tradesData Convert aggTrades data into easier format </para>        </briefdescription>
        <detaileddescription>
<para>$tradesData = $this-&gt;tradesData($trades);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$trades</parametername>
</parameternamelist>
<parameterdescription>
<para>array of trade information </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array easier format for trade information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1278" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1278" bodyend="1294"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a65e35c5cdc897acaa25e9aeee0bb2bea" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::bookPriceData</definition>
        <argsstring>(array $array)</argsstring>
        <name>bookPriceData</name>
        <param>
          <type>array</type>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>bookPriceData Consolidates Book Prices into an easy to use object </para>        </briefdescription>
        <detaileddescription>
<para>$bookPriceData = $this-&gt;bookPriceData($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array book prices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array easier format for book prices information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1304" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1304" bodyend="1316"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aafcb1708921f53d72edfa257e3da51bd" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::priceData</definition>
        <argsstring>(array $array)</argsstring>
        <name>priceData</name>
        <param>
          <type>array</type>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>priceData Converts Price Data into an easy key/value array </para>        </briefdescription>
        <detaileddescription>
<para>$array = $this-&gt;priceData($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array of prices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array of key/value pairs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1326" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1326" bodyend="1333"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ac58a4a51592fce18cb300cf331201548" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depthData</definition>
        <argsstring>(string $symbol, array $json)</argsstring>
        <name>depthData</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>array</type>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>depthData Formats depth data for nice display </para>        </briefdescription>
        <detaileddescription>
<para>$array = $this-&gt;depthData($symbol, $json);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the depth infomration </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array of the depth information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1470" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1470" bodyend="1483"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a2a27388362d21462e9152f0cd0c54127" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depthHandler</definition>
        <argsstring>(array $json)</argsstring>
        <name>depthHandler</name>
        <param>
          <type>array</type>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>depthHandler For WebSocket Depth Cache </para>        </briefdescription>
        <detaileddescription>
<para>$this-&gt;depthHandler($json);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>array of depth bids and asks </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1543" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1543" bodyend="1564"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a3bd08d6f6a8ef35a5506cb2f4e413a22" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::chartHandler</definition>
        <argsstring>(string $symbol, string $interval,\stdClass $json)</argsstring>
        <name>chartHandler</name>
        <param>
          <type>string</type>
          <declname>$symbol</declname>
        </param>
        <param>
          <type>string</type>
          <declname>$interval</declname>
        </param>
        <param>
          <type>\stdClass</type>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>chartHandler For WebSocket Chart Cache </para>        </briefdescription>
        <detaileddescription>
<para>$this-&gt;chartHandler($symbol, $interval, $json);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>string to sort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>string time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametertype>\stdClass</parametertype>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>object time </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1576" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1576" bodyend="1602"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a5579352b60172f7bb5494ed2df7ae867" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::downloadCurlCaBundle</definition>
        <argsstring>()</argsstring>
        <name>downloadCurlCaBundle</name>
        <briefdescription>
<para>Due to ongoing issues with out of date wamp CA bundles This function downloads ca bundle for curl website and uses it as part of the curl options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="2130" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="2130" bodyend="2172"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main Binance class. </para>    </briefdescription>
    <detaileddescription>
<para>Eg. Usage: require &apos;vendor/autoload.php&apos;; $api = new Binance\API(); </para>    </detaileddescription>
    <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="30" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="29" bodyend="2173"/>
    <listofallmembers>
      <member refid="classBinance_1_1API_1a4b70fc1796d52440e44423da2cbafca5" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$api_key</name></member>
      <member refid="classBinance_1_1API_1a5612f3068ec5843031812893537e7677" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$api_secret</name></member>
      <member refid="classBinance_1_1API_1ac863e52396757997d84e6783b5336828" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$base</name></member>
      <member refid="classBinance_1_1API_1a80f67dda302da9465596ad5e0bd86ce2" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>$btc_total</name></member>
      <member refid="classBinance_1_1API_1af80ef162a101ffa0963d977126d6811d" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>$btc_value</name></member>
      <member refid="classBinance_1_1API_1abeabeb044e83a23ad58bdcfa57e73d47" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$caOverride</name></member>
      <member refid="classBinance_1_1API_1aaa75d873054290eecf1dd2876237a279" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$chartQueue</name></member>
      <member refid="classBinance_1_1API_1a0c2d0cd199527b3b275143c49d91702e" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$charts</name></member>
      <member refid="classBinance_1_1API_1ace9645947686e99baf916e3bc189aeaf" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$curlOpts</name></member>
      <member refid="classBinance_1_1API_1a69d62e886266a59b0a314cb4f5f164ca" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$depthCache</name></member>
      <member refid="classBinance_1_1API_1ab04600479e07a4af0ead9ba84772bde1" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$depthQueue</name></member>
      <member refid="classBinance_1_1API_1aaaf9a901342001f8734bfab6ba505205" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>$httpDebug</name></member>
      <member refid="classBinance_1_1API_1a8d15ac7cb74ac52f8f008e61aa7cab89" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$info</name></member>
      <member refid="classBinance_1_1API_1a1415587257942c2b5af22c642ff58005" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$proxyConf</name></member>
      <member refid="classBinance_1_1API_1a69a4bfc5a6773dff1d01166dfbb402a2" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$requestCount</name></member>
      <member refid="classBinance_1_1API_1a0ce2df2282110071b78061c3043200af" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$stream</name></member>
      <member refid="classBinance_1_1API_1a858ac2cec1de7719779b6c517adcb0bf" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>$subscriptions</name></member>
      <member refid="classBinance_1_1API_1ac40776b871ae1591348c96162e872789" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$transfered</name></member>
      <member refid="classBinance_1_1API_1a52a5376574ff759fb1df6c8efe24cb7f" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$wapi</name></member>
      <member refid="classBinance_1_1API_1adbaefdc26d86ac1fd69ad101e0905c78" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>__construct</name></member>
      <member refid="classBinance_1_1API_1aa48130f98262fb73c42b90837a39ee9b" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>__get</name></member>
      <member refid="classBinance_1_1API_1a0c51e059d275539f7591ae1886787916" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>__set</name></member>
      <member refid="classBinance_1_1API_1a14272f6a80009bc8fd742b5f35fee9a5" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>account</name></member>
      <member refid="classBinance_1_1API_1a90daef87526a753473580139c04d311b" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>addToTransfered</name></member>
      <member refid="classBinance_1_1API_1af047ce7afeff0729b62fb28b2697ad9f" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>aggTrades</name></member>
      <member refid="classBinance_1_1API_1a84057ee146e075eec54be8c5e780e159" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>balanceData</name></member>
      <member refid="classBinance_1_1API_1ad2eb0a86fd2e6ddfec7ebe93fc74e2c8" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>balanceHandler</name></member>
      <member refid="classBinance_1_1API_1afe968feb47f5b68853dae571cb75800c" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>balances</name></member>
      <member refid="classBinance_1_1API_1a65e35c5cdc897acaa25e9aeee0bb2bea" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>bookPriceData</name></member>
      <member refid="classBinance_1_1API_1aa1e851e6a5fe2e01f7c5493fa9b90c97" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>bookPrices</name></member>
      <member refid="classBinance_1_1API_1a98bf564a5ff752a2393bc626b222905e" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>buy</name></member>
      <member refid="classBinance_1_1API_1a9e199a90097fbee4e89e2777534599b7" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>buyTest</name></member>
      <member refid="classBinance_1_1API_1ac49c3595190e193510eb368c0fa92992" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>cancel</name></member>
      <member refid="classBinance_1_1API_1a8273c4cc5c3226aa46e5aee6a69a58aa" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>candlesticks</name></member>
      <member refid="classBinance_1_1API_1a2d4a65cde999da48f82c29e989133ac3" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>chart</name></member>
      <member refid="classBinance_1_1API_1abfa33a7a2d4300183c2a2b40b82ee21e" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>chartData</name></member>
      <member refid="classBinance_1_1API_1a3bd08d6f6a8ef35a5506cb2f4e413a22" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>chartHandler</name></member>
      <member refid="classBinance_1_1API_1a00d93784ab9eb83c3817ccaa75e9746d" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>cumulative</name></member>
      <member refid="classBinance_1_1API_1a40614aa2f9799c1197919812b37e6061" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depositAddress</name></member>
      <member refid="classBinance_1_1API_1ac1e40c1bef7a768365d1e123d2324d5d" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depositHistory</name></member>
      <member refid="classBinance_1_1API_1ac36901dbea220b2401786a6d1bc4d051" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depth</name></member>
      <member refid="classBinance_1_1API_1a179ddfeb9d6469f43f56f4415e226ca0" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depthCache</name></member>
      <member refid="classBinance_1_1API_1ac58a4a51592fce18cb300cf331201548" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>depthData</name></member>
      <member refid="classBinance_1_1API_1a2a27388362d21462e9152f0cd0c54127" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>depthHandler</name></member>
      <member refid="classBinance_1_1API_1a184430be210c8e5cb7be80c9e239619f" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>displayDepth</name></member>
      <member refid="classBinance_1_1API_1a5579352b60172f7bb5494ed2df7ae867" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>downloadCurlCaBundle</name></member>
      <member refid="classBinance_1_1API_1a944f676d29829384ea8eca179fe9ca5a" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>exchangeInfo</name></member>
      <member refid="classBinance_1_1API_1aba2c700e43a03db162fc9fb9fc80eb11" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>executionHandler</name></member>
      <member refid="classBinance_1_1API_1a53fcf31d85faa8445653f581fdbdb72c" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>first</name></member>
      <member refid="classBinance_1_1API_1af1d41534a9f67bc74a6133efa2df4df7" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>getProxyUriString</name></member>
      <member refid="classBinance_1_1API_1abfb76ae473557ff989bee3287d3c437c" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>getRequestCount</name></member>
      <member refid="classBinance_1_1API_1ae1688d4d245b8f22a87c7afb1db5432a" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>getTransfered</name></member>
      <member refid="classBinance_1_1API_1a5eaa9d36db8181fc4605a3841f1106ac" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>highstock</name></member>
      <member refid="classBinance_1_1API_1a91842828e25805fe9a6fd51391566386" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>history</name></member>
      <member refid="classBinance_1_1API_1a528767b0c2347b228d2c28f2d20f5590" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>httpRequest</name></member>
      <member refid="classBinance_1_1API_1a2a29ca9ab18d04ff2e42aa6e5e0ce312" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>keepAlive</name></member>
      <member refid="classBinance_1_1API_1a33e3e2b84393ad729ce3639004970254" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>kline</name></member>
      <member refid="classBinance_1_1API_1a468092e1edfd35f79954236714c825c6" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>last</name></member>
      <member refid="classBinance_1_1API_1aa6156e4c8d03bbdd8c16bbb18ea75646" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketBuy</name></member>
      <member refid="classBinance_1_1API_1ad11565e34ba1c715ac2478ee7f9aab6e" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketBuyTest</name></member>
      <member refid="classBinance_1_1API_1a72d07ceea281b273d65a487efc02e31e" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketSell</name></member>
      <member refid="classBinance_1_1API_1a77eaa982d0ca78fbce80d6203213af28" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketSellTest</name></member>
      <member refid="classBinance_1_1API_1af115a75377eb89f33d7beb488f5bb7c5" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>miniTicker</name></member>
      <member refid="classBinance_1_1API_1a155a0a0d36ea7145f5833d9f17386335" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>openOrders</name></member>
      <member refid="classBinance_1_1API_1a40e8ddf7280b33b1899f59d0f16e5fa0" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>order</name></member>
      <member refid="classBinance_1_1API_1aa1b445b6eb144e0c551fbe035737dbf8" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>orders</name></member>
      <member refid="classBinance_1_1API_1ae7eae3f9588c2aee0d3c46bb9fa2ffe4" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>orderStatus</name></member>
      <member refid="classBinance_1_1API_1a884414d58f6297f79afe94a60dc0d794" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>prevDay</name></member>
      <member refid="classBinance_1_1API_1aafcb1708921f53d72edfa257e3da51bd" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>priceData</name></member>
      <member refid="classBinance_1_1API_1a718271dc0691ae3a1f60dc0e7ad89698" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>prices</name></member>
      <member refid="classBinance_1_1API_1aa5d028c98ced18dab5194009f4abdb0e" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>sell</name></member>
      <member refid="classBinance_1_1API_1a67841995467768588781cde190e59235" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>sellTest</name></member>
      <member refid="classBinance_1_1API_1a3647415e517c745a35d2d54bb27575fe" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>setProxy</name></member>
      <member refid="classBinance_1_1API_1ace1a4cd10b0239f40d0b89daf8fd67cf" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>setupApiConfigFromFile</name></member>
      <member refid="classBinance_1_1API_1a012f48621ba42ff06159cbc3024f20e9" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>setupCurlOptsFromFile</name></member>
      <member refid="classBinance_1_1API_1a1531b3a71a673f021898a1ab11a941ab" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>setupProxyConfigFromFile</name></member>
      <member refid="classBinance_1_1API_1a61742a5bdff7fc2119ab8b797c0cef4e" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>sortDepth</name></member>
      <member refid="classBinance_1_1API_1a67ed560d60527ad64f16253069cb1b14" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>terminate</name></member>
      <member refid="classBinance_1_1API_1a67bb7518406ed697a1e476f22ed78bf6" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>ticker</name></member>
      <member refid="classBinance_1_1API_1a6ff65dd6e6b498671740c718f0421aec" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>tickerStreamHandler</name></member>
      <member refid="classBinance_1_1API_1afd72d19a5504b1a0a694ca9a8af1047b" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>time</name></member>
      <member refid="classBinance_1_1API_1a77611c0cbe2d55dc04239274769e2de9" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>trades</name></member>
      <member refid="classBinance_1_1API_1a89985a26a01e91bf449bc4ccad2eef29" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>tradesData</name></member>
      <member refid="classBinance_1_1API_1af033a40a6a86ad422c58d67dc57bb0fd" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>userData</name></member>
      <member refid="classBinance_1_1API_1abcc2a5c9ca76dd659db43aec7a0a9a5f" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>useServerTime</name></member>
      <member refid="classBinance_1_1API_1ab69047e208ca2a148f97120d518ecd3e" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>withdraw</name></member>
      <member refid="classBinance_1_1API_1a6b849844ef3f827d8144ae8e129978b5" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>withdrawFee</name></member>
      <member refid="classBinance_1_1API_1ac58d133afd56809f520aeb05e12b69d4" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>withdrawHistory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
