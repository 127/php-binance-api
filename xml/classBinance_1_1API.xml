<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.6">
  <compounddef id="classBinance_1_1API" kind="class" prot="public">
    <compoundname>Binance::API</compoundname>
      <sectiondef kind="protected-attrib">
      <memberdef kind="variable" id="classBinance_1_1API_1ac863e52396757997d84e6783b5336828" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$base</definition>
        <argsstring></argsstring>
        <name>$base</name>
        <initializer>= &quot;https://api.binance.com/api/&quot;</initializer>
        <briefdescription>
<para>REST endpoint for the currency exchange. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="21" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="21" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a52a5376574ff759fb1df6c8efe24cb7f" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$wapi</definition>
        <argsstring></argsstring>
        <name>$wapi</name>
        <initializer>= &quot;https://api.binance.com/wapi/&quot;</initializer>
        <briefdescription>
<para>REST endpoint for the withdrawals. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="22" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="22" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a4b70fc1796d52440e44423da2cbafca5" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$api_key</definition>
        <argsstring></argsstring>
        <name>$api_key</name>
        <briefdescription>
<para>API key that you created in the binance website member area. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="23" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="23" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a5612f3068ec5843031812893537e7677" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$api_secret</definition>
        <argsstring></argsstring>
        <name>$api_secret</name>
        <briefdescription>
<para>API secret that was given to you when you created the api key. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="24" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="24" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a69d62e886266a59b0a314cb4f5f164ca" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$depthCache</definition>
        <argsstring></argsstring>
        <name>$depthCache</name>
        <initializer>= []</initializer>
        <briefdescription>
<para>Websockets depth cache. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="25" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="25" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1ab04600479e07a4af0ead9ba84772bde1" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$depthQueue</definition>
        <argsstring></argsstring>
        <name>$depthQueue</name>
        <initializer>= []</initializer>
        <briefdescription>
<para>Websockets depth queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="26" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="26" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1aaa75d873054290eecf1dd2876237a279" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$chartQueue</definition>
        <argsstring></argsstring>
        <name>$chartQueue</name>
        <initializer>= []</initializer>
        <briefdescription>
<para>Websockets chart queue. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="27" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a0c2d0cd199527b3b275143c49d91702e" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$charts</definition>
        <argsstring></argsstring>
        <name>$charts</name>
        <initializer>= []</initializer>
        <briefdescription>
<para>Websockets chart data. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="28" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a8d15ac7cb74ac52f8f008e61aa7cab89" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$info</definition>
        <argsstring></argsstring>
        <name>$info</name>
        <initializer>= [&quot;timeOffset&quot;=&gt;0]</initializer>
        <briefdescription>
<para>Additional connection options. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="29" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a1415587257942c2b5af22c642ff58005" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$proxyConf</definition>
        <argsstring></argsstring>
        <name>$proxyConf</name>
        <initializer>= null</initializer>
        <briefdescription>
<para>Used for story the proxy configuration. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="30" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1ac40776b871ae1591348c96162e872789" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$transfered</definition>
        <argsstring></argsstring>
        <name>$transfered</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>This stores the amount of bytes transfered. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="31" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a69a4bfc5a6773dff1d01166dfbb402a2" prot="protected" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$requestCount</definition>
        <argsstring></argsstring>
        <name>$requestCount</name>
        <initializer>= 0</initializer>
        <briefdescription>
<para>This stores the amount of API requests. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="32" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="32" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="classBinance_1_1API_1aaaf9a901342001f8734bfab6ba505205" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$httpDebug</definition>
        <argsstring></argsstring>
        <name>$httpDebug</name>
        <initializer>= false</initializer>
        <briefdescription>
<para>If you enable this, curl will output debugging information. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="33" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a706b2458b10d731ea4918714c333a845" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$balances</definition>
        <argsstring></argsstring>
        <name>$balances</name>
        <initializer>= []</initializer>
        <briefdescription>
<para>binace balances from the last run </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="34" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1af80ef162a101ffa0963d977126d6811d" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$btc_value</definition>
        <argsstring></argsstring>
        <name>$btc_value</name>
        <initializer>= 0.00</initializer>
        <briefdescription>
<para>value of available assets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="35" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classBinance_1_1API_1a80f67dda302da9465596ad5e0bd86ce2" prot="public" static="no" mutable="no">
        <type></type>
        <definition>Binance\API::$btc_total</definition>
        <argsstring></argsstring>
        <name>$btc_total</name>
        <initializer>= 0.00</initializer>
        <briefdescription>
<para>value of available + onOrder assets </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="36" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classBinance_1_1API_1adbd7fdb4457492d7b6bad7b120492770" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::__construct</definition>
        <argsstring>($api_key= &apos;&apos;, $api_secret= &apos;&apos;, $options=[&quot;useServerTime&quot;=&gt;false], $proxyConf=null)</argsstring>
        <name>__construct</name>
        <param>
          <declname>$api_key</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <declname>$api_secret</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <param>
          <declname>$options</declname>
          <defval>[&quot;useServerTime&quot;=</defval>
        </param>
        <param>
          <type>false]</type>
        </param>
        <param>
          <declname>$proxyConf</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>Constructor for the class, There are 4 ways to contruct the class: </para>        </briefdescription>
        <detaileddescription>
<para><itemizedlist>
<listitem><para>You can use the config file in ~/jaggedsoft/php-binance-api.json and empty contructor</para></listitem><listitem><para>new Binance\API( $api_key, $api_secret);</para></listitem><listitem><para>new Binance\API( $api_key, $api_secret, $options);</para></listitem><listitem><para>new Binance\API( $api_key, $api_secret, $options, $proxyConf);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$api_key</parametername>
</parameternamelist>
<parameterdescription>
<para>string api key </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$api_secret</parametername>
</parameternamelist>
<parameterdescription>
<para>string api secret </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$options</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional coniguration options </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$proxyConf</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="51" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="51" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a8debc23a73d11fc6ed2b19365de17fdf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::buy</definition>
        <argsstring>($symbol, $quantity, $price, $type=&quot;LIMIT&quot;, $flags=[])</argsstring>
        <name>buy</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>buy attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER </para>        </briefdescription>
        <detaileddescription>
<para>You should check the <simplesect kind="see"><para>exchangeInfo for each currency to determine what types of orders can be placed against specific pairs</para></simplesect>
$quantity = 1; $price = 0.0005; $order = $api-&gt;buy(&quot;BNBBTC&quot;, $quantity, $price);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>string type of order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="125" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="125" bodyend="127"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ad45ea86647eb309bbff25c2760ff44c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::buyTest</definition>
        <argsstring>($symbol, $quantity, $price, $type=&quot;LIMIT&quot;, $flags=[])</argsstring>
        <name>buyTest</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>buyTest attempts to create a TEST currency order </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>buy()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or empty or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="140" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="140" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aebb5a164303af16e66c2b9281f45a315" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::sell</definition>
        <argsstring>($symbol, $quantity, $price, $type=&quot;LIMIT&quot;, $flags=[])</argsstring>
        <name>sell</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>sell attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER </para>        </briefdescription>
        <detaileddescription>
<para>You should check the <simplesect kind="see"><para>exchangeInfo for each currency to determine what types of orders can be placed against specific pairs</para></simplesect>
$quantity = 1; $price = 0.0005; $order = $api-&gt;sell(&quot;BNBBTC&quot;, $quantity, $price);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>string type of order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="169" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="169" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a34b5e813092766a1dd546eedf77cbde5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::sellTest</definition>
        <argsstring>($symbol, $quantity, $price, $type=&quot;LIMIT&quot;, $flags=[])</argsstring>
        <name>sellTest</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>sellTest attempts to create a TEST currency order </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>sell()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>price per unit you want to spend </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array config </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or empty or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="184" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="184" bodyend="186"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a0fa240adf5da87c6b39ce8ba9c9925be" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketBuy</definition>
        <argsstring>($symbol, $quantity, $flags=[])</argsstring>
        <name>marketBuy</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketBuy attempts to create a currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para>$quantity = 1; $order = $api-&gt;marketBuy(&quot;BNBBTC&quot;, $quantity);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="199" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="199" bodyend="201"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ab97b393885bf23255396c26351c3bae0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketBuyTest</definition>
        <argsstring>($symbol, $quantity, $flags=[])</argsstring>
        <name>marketBuyTest</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketBuyTest attempts to create a TEST currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>marketBuy()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="212" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="212" bodyend="214"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a372c642283c163b018bc5c0cbebfccfd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketSell</definition>
        <argsstring>($symbol, $quantity, $flags=[])</argsstring>
        <name>marketSell</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketSell attempts to create a currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para>$quantity = 1; $order = $api-&gt;marketSell(&quot;BNBBTC&quot;, $quantity);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="227" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="227" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a572ddd85dd67b768a59e9d84bcdc1dfb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::marketSellTest</definition>
        <argsstring>($symbol, $quantity, $flags=[])</argsstring>
        <name>marketSellTest</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <briefdescription>
<para>marketSellTest attempts to create a TEST currency order at given market price </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>marketSellTest()</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>the quantity required </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for order type </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="240" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="240" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ad77198b60157ef3f4c7acd684ed64ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::cancel</definition>
        <argsstring>($symbol, $orderid)</argsstring>
        <name>cancel</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$orderid</declname>
        </param>
        <briefdescription>
<para>cancel attempts to cancel a currency order </para>        </briefdescription>
        <detaileddescription>
<para>$orderid = &quot;123456789&quot;; $order = $api-&gt;cancel(&quot;BNBBTC&quot;, $orderid);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$orderid</parametername>
</parameternamelist>
<parameterdescription>
<para>the orderid to cancel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="254" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="254" bodyend="256"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1adc33d167e8c8fa8aba1831de948b1558" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::orderStatus</definition>
        <argsstring>($symbol, $orderid)</argsstring>
        <name>orderStatus</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$orderid</declname>
        </param>
        <briefdescription>
<para>orderStatus attempts to get orders status </para>        </briefdescription>
        <detaileddescription>
<para>$orderid = &quot;123456789&quot;; $order = $api-&gt;orderStatus(&quot;BNBBTC&quot;, $orderid);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$orderid</parametername>
</parameternamelist>
<parameterdescription>
<para>the orderid to cancel </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="268" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="268" bodyend="270"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aaf2a8365d8f8a4a336c422183cddd0bf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::openOrders</definition>
        <argsstring>($symbol=null)</argsstring>
        <name>openOrders</name>
        <param>
          <declname>$symbol</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>openOrders attempts to get open orders for all currencies or a specific currency </para>        </briefdescription>
        <detaileddescription>
<para>$allOpenOrders = $api-&gt;openOrders(); $allBNBOrders = $api-&gt;openOrders( &quot;BNBBTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or the order details </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="281" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="281" bodyend="287"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a7d7f83f4843ad13d1ee812a9ca08facb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::orders</definition>
        <argsstring>($symbol, $limit=500, $fromOrderId=1)</argsstring>
        <name>orders</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$limit</declname>
          <defval>500</defval>
        </param>
        <param>
          <declname>$fromOrderId</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>orders attempts to get the orders for all or a specific currency </para>        </briefdescription>
        <detaileddescription>
<para>$allBNBOrders = $api-&gt;orders( &quot;BNBBTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of orders returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$fromOrderId</parametername>
</parameternamelist>
<parameterdescription>
<para>return the orders from this order onwards </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of orderDetails array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="299" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="299" bodyend="301"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a597ed694e6371dfd44acc1787d34b33b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::history</definition>
        <argsstring>($symbol, $limit=500, $fromTradeId=1)</argsstring>
        <name>history</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$limit</declname>
          <defval>500</defval>
        </param>
        <param>
          <declname>$fromTradeId</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
<para>history Get the complete account trade history for all or a specific currency </para>        </briefdescription>
        <detaileddescription>
<para>$allHistory = $api-&gt;history(); $BNBHistory = $api-&gt;history(&quot;BNBBTC&quot;); $limitBNBHistory = $api-&gt;history(&quot;BNBBTC&quot;,5); $limitBNBHistoryFromId = $api-&gt;history(&quot;BNBBTC&quot;,5,3);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of orders returned </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$fromTradeId</parametername>
</parameternamelist>
<parameterdescription>
<para>return the orders from this order onwards </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of orderDetails array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="316" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="316" bodyend="318"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1abcc2a5c9ca76dd659db43aec7a0a9a5f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::useServerTime</definition>
        <argsstring>()</argsstring>
        <name>useServerTime</name>
        <briefdescription>
<para>useServerTime adds the &apos;useServerTime&apos;=&gt;true to the API request to avoid time errors </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;useServerTime();</para><para><simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="327" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="327" bodyend="330"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1afd72d19a5504b1a0a694ca9a8af1047b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::time</definition>
        <argsstring>()</argsstring>
        <name>time</name>
        <briefdescription>
<para>time Gets the server time </para>        </briefdescription>
        <detaileddescription>
<para>$time = $api-&gt;time();</para><para><simplesect kind="return"><para>array with error message or array with server time key </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="339" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="339" bodyend="341"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a944f676d29829384ea8eca179fe9ca5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::exchangeInfo</definition>
        <argsstring>()</argsstring>
        <name>exchangeInfo</name>
        <briefdescription>
<para>exchangeInfo Gets the complete exchange info, including limits, currency options etc. </para>        </briefdescription>
        <detaileddescription>
<para>$info = $api-&gt;exchangeInfo();</para><para><simplesect kind="return"><para>array with error message or exchange info array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="350" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="350" bodyend="352"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1adcfbb41f48480958d59f547c61308acc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::withdraw</definition>
        <argsstring>($asset, $address, $amount, $addressTag=false)</argsstring>
        <name>withdraw</name>
        <param>
          <declname>$asset</declname>
        </param>
        <param>
          <declname>$address</declname>
        </param>
        <param>
          <declname>$amount</declname>
        </param>
        <param>
          <declname>$addressTag</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>withdraw requests a asset be withdrawn from binance to another wallet </para>        </briefdescription>
        <detaileddescription>
<para>$asset = &quot;BTC&quot;; $address = &quot;1C5gqLRs96Xq4V2ZZAR1347yUCpHie7sa&quot;; $amount = 0.2; $response = $api-&gt;withdraw($asset, $address, $amount);</para><para>$address = &quot;44tLjmXrQNrWJ5NBsEj2R77ZBEgDa3fEe9GLpSf2FRmhexPvfYDUAB7EXX1Hdb3aMQ9FLqdJ56yaAhiXoRsceGJCRS3Jxkn&quot;; $addressTag = &quot;0e5e38a01058dbf64e53a4333a5acf98e0d5feb8e523d32e3186c664a9c762c1&quot;; $amount = 0.1; $response = $api-&gt;withdraw($asset, $address, $amount, $addressTag);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency such as BTC </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$address</parametername>
</parameternamelist>
<parameterdescription>
<para>the addressed to whihc the asset should be deposited </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$amount</parametername>
</parameternamelist>
<parameterdescription>
<para>the amount of the asset to transfer </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$addressTag</parametername>
</parameternamelist>
<parameterdescription>
<para>adtional transactionid required by some assets </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array transaction </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="373" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="373" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ac3869aafdca5696b65b6102a13de1491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depositAddress</definition>
        <argsstring>($asset)</argsstring>
        <name>depositAddress</name>
        <param>
          <declname>$asset</declname>
        </param>
        <briefdescription>
<para>depositAddress get the deposit address for an asset </para>        </briefdescription>
        <detaileddescription>
<para>$depositAddress = $api-&gt;depositAddress(&quot;VEN&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>the currency such as BTC </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array deposit address information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="392" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="392" bodyend="395"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a11dd19cfaa85a0bcbc6b74f68eac68fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depositHistory</definition>
        <argsstring>($asset=false)</argsstring>
        <name>depositHistory</name>
        <param>
          <declname>$asset</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>depositAddress get the deposit history for an asset </para>        </briefdescription>
        <detaileddescription>
<para>$depositHistory = $api-&gt;depositHistory();</para><para>$depositHistory = $api-&gt;depositHistory( &quot;BTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>empty or the currency such as BTC </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array deposit history information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="407" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="407" bodyend="416"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a28af87f4769cdc6be3328b4f1b4e1ca4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::withdrawHistory</definition>
        <argsstring>($asset=false)</argsstring>
        <name>withdrawHistory</name>
        <param>
          <declname>$asset</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>withdrawHistory get the withdrawal history for an asset </para>        </briefdescription>
        <detaileddescription>
<para>$withdrawHistory = $api-&gt;withdrawHistory();</para><para>$withdrawHistory = $api-&gt;withdrawHistory( &quot;BTC&quot; );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$asset</parametername>
</parameternamelist>
<parameterdescription>
<para>empty or the currency such as BTC </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array deposit history information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="428" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="428" bodyend="437"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a718271dc0691ae3a1f60dc0e7ad89698" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::prices</definition>
        <argsstring>()</argsstring>
        <name>prices</name>
        <briefdescription>
<para>prices get all the current prices </para>        </briefdescription>
        <detaileddescription>
<para>$ticker = $api-&gt;prices();</para><para><simplesect kind="return"><para>array with error message or array of all the currencies prices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="446" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="446" bodyend="448"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa1e851e6a5fe2e01f7c5493fa9b90c97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::bookPrices</definition>
        <argsstring>()</argsstring>
        <name>bookPrices</name>
        <briefdescription>
<para>bookPrices get all bid/asks prices </para>        </briefdescription>
        <detaileddescription>
<para>$ticker = $api-&gt;bookPrices();</para><para><simplesect kind="return"><para>array with error message or array of all the book prices </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="457" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="457" bodyend="459"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a14272f6a80009bc8fd742b5f35fee9a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::account</definition>
        <argsstring>()</argsstring>
        <name>account</name>
        <briefdescription>
<para>account get all information about the api account </para>        </briefdescription>
        <detaileddescription>
<para>$account = $api-&gt;account();</para><para><simplesect kind="return"><para>array with error message or array of all the account information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="468" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="468" bodyend="470"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a018a1002f7346fe83f37325174cefe2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::prevDay</definition>
        <argsstring>($symbol= &apos;&apos;)</argsstring>
        <name>prevDay</name>
        <param>
          <declname>$symbol</declname>
          <defval>&apos;&apos;</defval>
        </param>
        <briefdescription>
<para>prevDay get 24hr ticker price change statistics for symbols </para>        </briefdescription>
        <detaileddescription>
<para>$prevDay = $api-&gt;prevDay(&quot;BNBBTC&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>(optional) symbol to get the previous day change for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of prevDay change </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="480" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="480" bodyend="486"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a028d3ff42cd67abab4c745851eedb901" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::aggTrades</definition>
        <argsstring>($symbol)</argsstring>
        <name>aggTrades</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <briefdescription>
<para>aggTrades get Market History / Aggregate Trades </para>        </briefdescription>
        <detaileddescription>
<para>$trades = $api-&gt;aggTrades(&quot;BNBBTC&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol to get the trade information for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of market history </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="496" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="496" bodyend="498"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a3a0c0a9284bf3447f4905cc71b975fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depth</definition>
        <argsstring>($symbol)</argsstring>
        <name>depth</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <briefdescription>
<para>depth get Market depth </para>        </briefdescription>
        <detaileddescription>
<para>$depth = $api-&gt;depth(&quot;ETHBTC&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>the symbol to get the depth information for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of market depth </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="508" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="508" bodyend="518"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1afe968feb47f5b68853dae571cb75800c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::balances</definition>
        <argsstring>($priceData=false)</argsstring>
        <name>balances</name>
        <param>
          <declname>$priceData</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>balances get balances for the account assets </para>        </briefdescription>
        <detaileddescription>
<para>$balances = $api-&gt;balances($ticker);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$priceData</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the symbols balances are required for </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array with error message or array of balances </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="528" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="528" bodyend="530"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1af1d41534a9f67bc74a6133efa2df4df7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::getProxyUriString</definition>
        <argsstring>()</argsstring>
        <name>getProxyUriString</name>
        <briefdescription>
<para>getProxyUriString get Uniform Resource Identifier string assocaited with proxy config </para>        </briefdescription>
        <detaileddescription>
<para>$balances = $api-&gt;getProxyUriString();</para><para><simplesect kind="return"><para>string uri </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="539" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="539" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aaeffb0ae4ae4b57030b5e586af9796c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::setProxy</definition>
        <argsstring>($proxyconf)</argsstring>
        <name>setProxy</name>
        <param>
          <declname>$proxyconf</declname>
        </param>
        <briefdescription>
<para>setProxy set proxy config by passing in an array of the proxy configuration </para>        </briefdescription>
        <detaileddescription>
<para>$proxyConf = [ &apos;proto&apos; =&gt; &apos;tcp&apos;, &apos;address&apos; =&gt; &apos;192.168.1.1&apos;, &apos;port&apos; =&gt; &apos;8080&apos;, &apos;user&apos; =&gt; &apos;dude&apos;, &apos;pass&apos; =&gt; &apos;d00d&apos; ];</para><para>$api-&gt;setProxy( $proxyconf );</para><para><simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="581" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="581" bodyend="583"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a672f348fa579428bc57e7f3673214c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::order</definition>
        <argsstring>($side, $symbol, $quantity, $price, $type=&quot;LIMIT&quot;, $flags=[], $test=false)</argsstring>
        <name>order</name>
        <param>
          <declname>$side</declname>
        </param>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$quantity</declname>
        </param>
        <param>
          <declname>$price</declname>
        </param>
        <param>
          <declname>$type</declname>
          <defval>&quot;LIMIT&quot;</defval>
        </param>
        <param>
          <declname>$flags</declname>
          <defval>[]</defval>
        </param>
        <param>
          <declname>$test</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>order formats the orders before sending them to the curl wrapper function You can call this function directly or use the helper functions </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para>buy </para><simplesectsep/><para>sell </para><simplesectsep/><para>marketBuy </para><simplesectsep/><para>marketSell</para></simplesect>
$this-&gt;httpRequest( &quot;https://api.binance.com/api/v1/ticker/24hr&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$side</parametername>
</parameternamelist>
<parameterdescription>
<para>typically &quot;BUY&quot; or &quot;SELL&quot; </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>to buy or sell </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$quantity</parametername>
</parameternamelist>
<parameterdescription>
<para>in the order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$price</parametername>
</parameternamelist>
<parameterdescription>
<para>for the order </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$type</parametername>
</parameternamelist>
<parameterdescription>
<para>is determined by the symbol bu typicall LIMIT, STOP_LOSS_LIMIT etc. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$flags</parametername>
</parameternamelist>
<parameterdescription>
<para>additional transaction options </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$test</parametername>
</parameternamelist>
<parameterdescription>
<para>whether to test or not, test only validates the query </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="710" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="710" bodyend="773"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1af0cefd5aec5137cb94a07d9bcfba13c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::candlesticks</definition>
        <argsstring>($symbol, $interval=&quot;5m&quot;, $limit=null, $startTime=null, $endTime=null)</argsstring>
        <name>candlesticks</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$interval</declname>
          <defval>&quot;5m&quot;</defval>
        </param>
        <param>
          <declname>$limit</declname>
          <defval>null</defval>
        </param>
        <param>
          <declname>$startTime</declname>
          <defval>null</defval>
        </param>
        <param>
          <declname>$endTime</declname>
          <defval>null</defval>
        </param>
        <briefdescription>
<para>candlesticks get the cancles for the given intervals 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M </para>        </briefdescription>
        <detaileddescription>
<para>$candles = $api-&gt;candlesticks(&quot;BNBBTC&quot;, &quot;5m&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>to query </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>to request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>limit the amount of candles </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$startTime</parametername>
</parameternamelist>
<parameterdescription>
<para>request candle information starting from here </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$endTime</parametername>
</parameternamelist>
<parameterdescription>
<para>request candle information ending here </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="788" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="788" bodyend="813"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa6439ce0ad7eff968a70c441c3a5b444" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::cumulative</definition>
        <argsstring>($depth)</argsstring>
        <name>cumulative</name>
        <param>
          <declname>$depth</declname>
        </param>
        <briefdescription>
<para>cumulative Converts depth cache into a cumulative array </para>        </briefdescription>
        <detaileddescription>
<para>$cumulative = $api-&gt;cumulative($depth);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$depth</parametername>
</parameternamelist>
<parameterdescription>
<para>cache array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array cumulative depth cache </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1049" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1049" bodyend="1062"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a9afbbfbd53c700745bba158493cfb541" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::highstock</definition>
        <argsstring>($chart, $include_volume=false)</argsstring>
        <name>highstock</name>
        <param>
          <declname>$chart</declname>
        </param>
        <param>
          <declname>$include_volume</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>highstock Converts Chart Data into array for highstock &amp; kline charts </para>        </briefdescription>
        <detaileddescription>
<para>$highstock = $api-&gt;highstock($chart, $include_volume);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$chart</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$include_volume</parametername>
</parameternamelist>
<parameterdescription>
<para>bool for inclusion of volume </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array highchart data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1073" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1073" bodyend="1087"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ab941e8a3238d029ba5dc168cc1b5c20b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::first</definition>
        <argsstring>($array)</argsstring>
        <name>first</name>
        <param>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>first Gets first key of an array </para>        </briefdescription>
        <detaileddescription>
<para>$first = $api-&gt;first($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string key or null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1097" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1097" bodyend="1102"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ad3c68f4e2c1e05f08e147083e9abd5d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::last</definition>
        <argsstring>($array)</argsstring>
        <name>last</name>
        <param>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>last Gets last key of an array </para>        </briefdescription>
        <detaileddescription>
<para>$last = $api-&gt;last($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string key or null </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1112" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1112" bodyend="1117"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a344e647311d050adf2ac30acc293da28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::displayDepth</definition>
        <argsstring>($array)</argsstring>
        <name>displayDepth</name>
        <param>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>displayDepth Formats nicely for console output </para>        </briefdescription>
        <detaileddescription>
<para>$outputString = $api-&gt;displayDepth($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>string of the depth information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1127" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1127" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ae1688d4d245b8f22a87c7afb1db5432a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::getTransfered</definition>
        <argsstring>()</argsstring>
        <name>getTransfered</name>
        <briefdescription>
<para>getTransfered gets the total transfered in b,Kb,Mb,Gb </para>        </briefdescription>
        <detaileddescription>
<para>$transfered = $api-&gt;getTransfered();</para><para><simplesect kind="return"><para>string showing the total transfered </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1170" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1170" bodyend="1174"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1abfb76ae473557ff989bee3287d3c437c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::getRequestCount</definition>
        <argsstring>()</argsstring>
        <name>getRequestCount</name>
        <briefdescription>
<para>getRequestCount gets the total number of API calls </para>        </briefdescription>
        <detaileddescription>
<para>$apiCount = $api-&gt;getRequestCount();</para><para><simplesect kind="return"><para>int get the total number of api calls </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1183" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1183" bodyend="1185"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a9af0e8d4bfa7f323772446db31c659bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::addToTransfered</definition>
        <argsstring>($int)</argsstring>
        <name>addToTransfered</name>
        <param>
          <declname>$int</declname>
        </param>
        <briefdescription>
<para>addToTransfered add interger bytes to the total transfered also incrementes the api counter </para>        </briefdescription>
        <detaileddescription>
<para>$apiCount = $api-&gt;addToTransfered( $int );</para><para><simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1195" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1195" bodyend="1198"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a01035d97174324ba1575440e28bbc02e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::sortDepth</definition>
        <argsstring>($symbol, $limit=11)</argsstring>
        <name>sortDepth</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$limit</declname>
          <defval>11</defval>
        </param>
        <briefdescription>
<para>sortDepth Sorts depth data for display &amp; getting highest bid and lowest ask </para>        </briefdescription>
        <detaileddescription>
<para>$sorted = $api-&gt;sortDepth($symbol, $limit);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>to sort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$limit</parametername>
</parameternamelist>
<parameterdescription>
<para>depth </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1264" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1264" bodyend="1270"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a45372f030cfca92206638f69f114216a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depthCache</definition>
        <argsstring>($symbols, $callback)</argsstring>
        <name>depthCache</name>
        <param>
          <declname>$symbols</declname>
        </param>
        <param>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>depthCache Pulls /depth data and subscribes to  WebSocket endpoint Maintains a local Depth Cache in sync via lastUpdateId. </para>        </briefdescription>
        <detaileddescription>
<para>See depth() and depthHandler()</para><para>$api-&gt;depthCache([&quot;BNBBTC&quot;], function($api, $symbol, $depth) { echo &quot;{$symbol} depth cache update&quot;.PHP_EOL; //print_r($depth); // Print all depth data $limit = 11; // Show only the closest asks/bids $sorted = $api-&gt;sortDepth($symbol, $limit); $bid = $api-&gt;first($sorted[&apos;bids&apos;]); $ask = $api-&gt;first($sorted[&apos;asks&apos;]); echo $api-&gt;displayDepth($sorted); echo &quot;ask: {$ask}&quot;.PHP_EOL; echo &quot;bid: {$bid}&quot;.PHP_EOL; });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>optional array of symbols </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1292" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1292" bodyend="1329"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ae760a0c3d8d95dcef8acad5639f5b661" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::trades</definition>
        <argsstring>($symbols, $callback)</argsstring>
        <name>trades</name>
        <param>
          <declname>$symbols</declname>
        </param>
        <param>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>trades Trades WebSocket Endpoint </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;trades([&quot;BNBBTC&quot;], function($api, $symbol, $trades) { echo &quot;{$symbol} trades update&quot;.PHP_EOL; print_r($trades); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>optional symbol </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1343" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1343" bodyend="1373"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a86ce0b32d5df8c23a88364f56b1d9e2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::ticker</definition>
        <argsstring>($symbol, $callback)</argsstring>
        <name>ticker</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>ticker pulls 24h price change statistics via WebSocket </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;ticker(false, function($api, $symbol, $ticker) { print_r($ticker); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>optional symbol or false </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1386" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1386" bodyend="1407"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a4fa537df4d7eda8f26817ef350d330c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::chart</definition>
        <argsstring>($symbols, $interval=&quot;30m&quot;, $callback)</argsstring>
        <name>chart</name>
        <param>
          <declname>$symbols</declname>
        </param>
        <param>
          <declname>$interval</declname>
          <defval>&quot;30m&quot;</defval>
        </param>
        <param>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>chart Pulls /kline data and subscribes to  WebSocket endpoint </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;chart([&quot;BNBBTC&quot;], &quot;15m&quot;, function($api, $symbol, $chart) { echo &quot;{$symbol} chart update\n&quot;; print_r($chart); });</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbols</parametername>
</parameternamelist>
<parameterdescription>
<para>required symbols </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>time inteval </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>closure </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1422" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1422" bodyend="1463"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a2a29ca9ab18d04ff2e42aa6e5e0ce312" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::keepAlive</definition>
        <argsstring>()</argsstring>
        <name>keepAlive</name>
        <briefdescription>
<para>keepAlive Keep-alive function for userDataStream </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;keepAlive();</para><para><simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1472" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1472" bodyend="1479"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1af033a40a6a86ad422c58d67dc57bb0fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::userData</definition>
        <argsstring>(&amp;$balance_callback, &amp;$execution_callback=false)</argsstring>
        <name>userData</name>
        <param>
          <type>&amp;</type>
          <declname>$balance_callback</declname>
        </param>
        <param>
          <type>&amp;</type>
          <declname>$execution_callback</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>userData Issues userDataStream token and keepalive, subscribes to userData WebSocket </para>        </briefdescription>
        <detaileddescription>
<para>$balance_update = function($api, $balances) { print_r($balances); echo &quot;Balance update&quot;.PHP_EOL; };</para><para>$order_update = function($api, $report) { echo &quot;Order update&quot;.PHP_EOL; print_r($report); $price = $report[&apos;price&apos;]; $quantity = $report[&apos;quantity&apos;]; $symbol = $report[&apos;symbol&apos;]; $side = $report[&apos;side&apos;]; $orderType = $report[&apos;orderType&apos;]; $orderId = $report[&apos;orderId&apos;]; $orderStatus = $report[&apos;orderStatus&apos;]; $executionType = $report[&apos;orderStatus&apos;]; if( $executionType == &quot;NEW&quot; ) { if( $executionType == &quot;REJECTED&quot; ) { echo &quot;Order Failed! Reason: {$report[&apos;rejectReason&apos;]}&quot;.PHP_EOL; } echo &quot;{$symbol} {$side} {$orderType} ORDER #{$orderId} ({$orderStatus})&quot;.PHP_EOL; echo &quot;..price: {$price}, quantity: {$quantity}&quot;.PHP_EOL; return; }</para><para>//NEW, CANCELED, REPLACED, REJECTED, TRADE, EXPIRED echo &quot;{$symbol} {$side} {$executionType} {$orderType} ORDER #{$orderId}&quot;.PHP_EOL; }; $api-&gt;userData($balance_update, $order_update);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$balance_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>function </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$execution_callback</parametername>
</parameternamelist>
<parameterdescription>
<para>function </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1518" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1518" bodyend="1543"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a8598ca4e53938db8998d143563044377" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::miniTicker</definition>
        <argsstring>($callback)</argsstring>
        <name>miniTicker</name>
        <param>
          <declname>$callback</declname>
        </param>
        <briefdescription>
<para>miniTicker Get miniTicker for all symbols </para>        </briefdescription>
        <detaileddescription>
<para>$api-&gt;miniTicker(function($api, $ticker) { print_r($ticker); }); <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$callback</parametername>
</parameternamelist>
<parameterdescription>
<para>function closer that takes 2 arguments, $pai and $ticker data </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1554" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1554" bodyend="1580"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classBinance_1_1API_1a9c3424a8cf17d79552afbfa1a8942c85" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::setupApiConfigFromFile</definition>
        <argsstring>()</argsstring>
        <name>setupApiConfigFromFile</name>
        <briefdescription>
<para>If no paramaters are supplied in the constructor, this function will attempt to load the api_key and api_secret from the users home directory in the file ~/jaggedsoft/php-binance-api.json. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="68" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="68" bodyend="74"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a976f2c24c8e05a28f45814ceeacdf165" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::setupProxyConfigFromFile</definition>
        <argsstring>()</argsstring>
        <name>setupProxyConfigFromFile</name>
        <briefdescription>
<para>If no paramaters are supplied in the constructor ofr the proxy confguration, this function will attempt to load the proxy info from the users home directory ~/jaggedsoft/php-binance-api.json. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="82" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="82" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a697f5b28ecf517a7a7ddcdaaf93bc2ad" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::httpRequest</definition>
        <argsstring>($url, $method=&quot;GET&quot;, $params=[], $signed=false)</argsstring>
        <name>httpRequest</name>
        <param>
          <declname>$url</declname>
        </param>
        <param>
          <declname>$method</declname>
          <defval>&quot;GET&quot;</defval>
        </param>
        <param>
          <declname>$params</declname>
          <defval>[]</defval>
        </param>
        <param>
          <declname>$signed</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>httpRequest curl wrapper for all http api requests. </para>        </briefdescription>
        <detaileddescription>
<para>You can&apos;t call this function directly, use the helper functions <simplesect kind="see"><para>buy </para><simplesectsep/><para>sell </para><simplesectsep/><para>marketBuy </para><simplesectsep/><para>marketSell</para></simplesect>
$this-&gt;httpRequest( &quot;https://api.binance.com/api/v1/ticker/24hr&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$url</parametername>
</parameternamelist>
<parameterdescription>
<para>the endpoint to query, typically includes query string </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$method</parametername>
</parameternamelist>
<parameterdescription>
<para>this should be typically GET, POST or DELETE </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$params</parametername>
</parameternamelist>
<parameterdescription>
<para>array addtional options for the request </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$signed</parametername>
</parameternamelist>
<parameterdescription>
<para>bool true or false sign the request with api secret </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="601" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="601" bodyend="689"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1abaed7f9d835c8ea6200fa43e3f47e3a0" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::balanceData</definition>
        <argsstring>($array, $priceData=false)</argsstring>
        <name>balanceData</name>
        <param>
          <declname>$array</declname>
        </param>
        <param>
          <declname>$priceData</declname>
          <defval>false</defval>
        </param>
        <briefdescription>
<para>balanceData Converts all your balances into a nice array If priceData is passed from $api-&gt;prices() it will add btcValue &amp; btcTotal to each symbol This function sets $btc_value which is your estimated BTC value of all assets combined and $btc_total which includes amount on order </para>        </briefdescription>
        <detaileddescription>
<para>$candles = $api-&gt;candlesticks(&quot;BNBBTC&quot;, &quot;5m&quot;);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>of your balances </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$priceData</parametername>
</parameternamelist>
<parameterdescription>
<para>array of prices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array containing the response </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="826" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="826" bodyend="872"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a231cf707f991a15f34e6d1148602c1af" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::balanceHandler</definition>
        <argsstring>($json)</argsstring>
        <name>balanceHandler</name>
        <param>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>balanceHandler Convert balance WebSocket data into array </para>        </briefdescription>
        <detaileddescription>
<para>$data = $this-&gt;balanceHandler( $json );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>data to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="882" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="882" bodyend="891"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a032befc6598403b6b2cd33016dc3a114" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::tickerStreamHandler</definition>
        <argsstring>($json)</argsstring>
        <name>tickerStreamHandler</name>
        <param>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>tickerStreamHandler Convert WebSocket ticker data into array </para>        </briefdescription>
        <detaileddescription>
<para>$data = $this-&gt;tickerStreamHandler( $json );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>data to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="901" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="901" bodyend="927"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ae0eff555cf95cfc65e0c44b78cbcf8d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::executionHandler</definition>
        <argsstring>($json)</argsstring>
        <name>executionHandler</name>
        <param>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>tickerStreamHandler Convert WebSocket trade execution into array </para>        </briefdescription>
        <detaileddescription>
<para>$data = $this-&gt;executionHandler( $json );</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>data to convert </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="937" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="937" bodyend="952"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1adfc552373fd3c1d1741e4838aa312cc8" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::chartData</definition>
        <argsstring>($symbol, $interval, $ticks)</argsstring>
        <name>chartData</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$interval</declname>
        </param>
        <param>
          <declname>$ticks</declname>
        </param>
        <briefdescription>
<para>chartData Convert kline data into object </para>        </briefdescription>
        <detaileddescription>
<para>$object = $this-&gt;chartData($symbol, $interval, $ticks);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>of your currency </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>the time interval </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$ticks</parametername>
</parameternamelist>
<parameterdescription>
<para>the canbles array </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array object of the chartdata </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="964" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="964" bodyend="982"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a31c51812e766866a7b6ddfcddf11fbe5" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::tradesData</definition>
        <argsstring>($trades)</argsstring>
        <name>tradesData</name>
        <param>
          <declname>$trades</declname>
        </param>
        <briefdescription>
<para>tradesData Convert aggTrades data into easier format </para>        </briefdescription>
        <detaileddescription>
<para>$tradesData = $this-&gt;tradesData($trades);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$trades</parametername>
</parameternamelist>
<parameterdescription>
<para>array of trade information </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array easier format for trade information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="992" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="992" bodyend="1002"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a20a8fbf026233ef08370a6116cb79609" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::bookPriceData</definition>
        <argsstring>($array)</argsstring>
        <name>bookPriceData</name>
        <param>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>bookPriceData Consolidates Book Prices into an easy to use object </para>        </briefdescription>
        <detaileddescription>
<para>$bookPriceData = $this-&gt;bookPriceData($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>book prices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array easier format for book prices information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1012" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1012" bodyend="1023"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a800848d5a50512be2bb5a5180d953f7b" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::priceData</definition>
        <argsstring>($array)</argsstring>
        <name>priceData</name>
        <param>
          <declname>$array</declname>
        </param>
        <briefdescription>
<para>priceData Converts Price Data into an easy key/value array </para>        </briefdescription>
        <detaileddescription>
<para>$array = $this-&gt;priceData($array);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$array</parametername>
</parameternamelist>
<parameterdescription>
<para>of prices </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array of key/value pairs </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1033" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1033" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1aa98398afa4cebbfff5e3459c62c332b6" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depthData</definition>
        <argsstring>($symbol, $json)</argsstring>
        <name>depthData</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>depthData Formats depth data for nice display </para>        </briefdescription>
        <detaileddescription>
<para>$array = $this-&gt;depthData($symbol, $json);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>to display </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>array of the depth infomration </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>array of the depth information </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1152" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1152" bodyend="1161"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1ad364a2fb92952f00dd5ecc55f38694d9" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::depthHandler</definition>
        <argsstring>($json)</argsstring>
        <name>depthHandler</name>
        <param>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>depthHandler For WebSocket Depth Cache </para>        </briefdescription>
        <detaileddescription>
<para>$this-&gt;depthHandler($json);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>to sort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>time </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1214" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1214" bodyend="1225"/>
      </memberdef>
      <memberdef kind="function" id="classBinance_1_1API_1a1d8f77cb5fbc8d6096d567e072d5137f" prot="private" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>Binance\API::chartHandler</definition>
        <argsstring>($symbol, $interval, $json)</argsstring>
        <name>chartHandler</name>
        <param>
          <declname>$symbol</declname>
        </param>
        <param>
          <declname>$interval</declname>
        </param>
        <param>
          <declname>$json</declname>
        </param>
        <briefdescription>
<para>chartHandler For WebSocket Chart Cache </para>        </briefdescription>
        <detaileddescription>
<para>$this-&gt;chartHandler($symbol, $interval, $json);</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>$symbol</parametername>
</parameternamelist>
<parameterdescription>
<para>to sort </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$interval</parametername>
</parameternamelist>
<parameterdescription>
<para>time </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>$json</parametername>
</parameternamelist>
<parameterdescription>
<para>time </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>nothing </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="1237" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="1237" bodyend="1253"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main Binance class. </para>    </briefdescription>
    <detaileddescription>
<para>Eg. Usage: require &apos;vendor/autoload.php&apos;; $api = new Binance\API(); </para>    </detaileddescription>
    <location file="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" line="20" column="1" bodyfile="/home/travis/build/jaggedsoft/php-binance-api/php-binance-api.php" bodystart="20" bodyend="1581"/>
    <listofallmembers>
      <member refid="classBinance_1_1API_1a4b70fc1796d52440e44423da2cbafca5" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$api_key</name></member>
      <member refid="classBinance_1_1API_1a5612f3068ec5843031812893537e7677" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$api_secret</name></member>
      <member refid="classBinance_1_1API_1a706b2458b10d731ea4918714c333a845" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>$balances</name></member>
      <member refid="classBinance_1_1API_1ac863e52396757997d84e6783b5336828" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$base</name></member>
      <member refid="classBinance_1_1API_1a80f67dda302da9465596ad5e0bd86ce2" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>$btc_total</name></member>
      <member refid="classBinance_1_1API_1af80ef162a101ffa0963d977126d6811d" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>$btc_value</name></member>
      <member refid="classBinance_1_1API_1aaa75d873054290eecf1dd2876237a279" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$chartQueue</name></member>
      <member refid="classBinance_1_1API_1a0c2d0cd199527b3b275143c49d91702e" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$charts</name></member>
      <member refid="classBinance_1_1API_1a69d62e886266a59b0a314cb4f5f164ca" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$depthCache</name></member>
      <member refid="classBinance_1_1API_1ab04600479e07a4af0ead9ba84772bde1" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$depthQueue</name></member>
      <member refid="classBinance_1_1API_1aaaf9a901342001f8734bfab6ba505205" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>$httpDebug</name></member>
      <member refid="classBinance_1_1API_1a8d15ac7cb74ac52f8f008e61aa7cab89" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$info</name></member>
      <member refid="classBinance_1_1API_1a1415587257942c2b5af22c642ff58005" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$proxyConf</name></member>
      <member refid="classBinance_1_1API_1a69a4bfc5a6773dff1d01166dfbb402a2" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$requestCount</name></member>
      <member refid="classBinance_1_1API_1ac40776b871ae1591348c96162e872789" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$transfered</name></member>
      <member refid="classBinance_1_1API_1a52a5376574ff759fb1df6c8efe24cb7f" prot="protected" virt="non-virtual"><scope>Binance::API</scope><name>$wapi</name></member>
      <member refid="classBinance_1_1API_1adbd7fdb4457492d7b6bad7b120492770" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>__construct</name></member>
      <member refid="classBinance_1_1API_1a14272f6a80009bc8fd742b5f35fee9a5" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>account</name></member>
      <member refid="classBinance_1_1API_1a9af0e8d4bfa7f323772446db31c659bc" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>addToTransfered</name></member>
      <member refid="classBinance_1_1API_1a028d3ff42cd67abab4c745851eedb901" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>aggTrades</name></member>
      <member refid="classBinance_1_1API_1abaed7f9d835c8ea6200fa43e3f47e3a0" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>balanceData</name></member>
      <member refid="classBinance_1_1API_1a231cf707f991a15f34e6d1148602c1af" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>balanceHandler</name></member>
      <member refid="classBinance_1_1API_1afe968feb47f5b68853dae571cb75800c" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>balances</name></member>
      <member refid="classBinance_1_1API_1a20a8fbf026233ef08370a6116cb79609" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>bookPriceData</name></member>
      <member refid="classBinance_1_1API_1aa1e851e6a5fe2e01f7c5493fa9b90c97" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>bookPrices</name></member>
      <member refid="classBinance_1_1API_1a8debc23a73d11fc6ed2b19365de17fdf" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>buy</name></member>
      <member refid="classBinance_1_1API_1ad45ea86647eb309bbff25c2760ff44c6" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>buyTest</name></member>
      <member refid="classBinance_1_1API_1ad77198b60157ef3f4c7acd684ed64ed5" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>cancel</name></member>
      <member refid="classBinance_1_1API_1af0cefd5aec5137cb94a07d9bcfba13c6" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>candlesticks</name></member>
      <member refid="classBinance_1_1API_1a4fa537df4d7eda8f26817ef350d330c2" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>chart</name></member>
      <member refid="classBinance_1_1API_1adfc552373fd3c1d1741e4838aa312cc8" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>chartData</name></member>
      <member refid="classBinance_1_1API_1a1d8f77cb5fbc8d6096d567e072d5137f" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>chartHandler</name></member>
      <member refid="classBinance_1_1API_1aa6439ce0ad7eff968a70c441c3a5b444" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>cumulative</name></member>
      <member refid="classBinance_1_1API_1ac3869aafdca5696b65b6102a13de1491" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depositAddress</name></member>
      <member refid="classBinance_1_1API_1a11dd19cfaa85a0bcbc6b74f68eac68fd" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depositHistory</name></member>
      <member refid="classBinance_1_1API_1a3a0c0a9284bf3447f4905cc71b975fd4" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depth</name></member>
      <member refid="classBinance_1_1API_1a45372f030cfca92206638f69f114216a" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>depthCache</name></member>
      <member refid="classBinance_1_1API_1aa98398afa4cebbfff5e3459c62c332b6" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>depthData</name></member>
      <member refid="classBinance_1_1API_1ad364a2fb92952f00dd5ecc55f38694d9" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>depthHandler</name></member>
      <member refid="classBinance_1_1API_1a344e647311d050adf2ac30acc293da28" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>displayDepth</name></member>
      <member refid="classBinance_1_1API_1a944f676d29829384ea8eca179fe9ca5a" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>exchangeInfo</name></member>
      <member refid="classBinance_1_1API_1ae0eff555cf95cfc65e0c44b78cbcf8d9" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>executionHandler</name></member>
      <member refid="classBinance_1_1API_1ab941e8a3238d029ba5dc168cc1b5c20b" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>first</name></member>
      <member refid="classBinance_1_1API_1af1d41534a9f67bc74a6133efa2df4df7" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>getProxyUriString</name></member>
      <member refid="classBinance_1_1API_1abfb76ae473557ff989bee3287d3c437c" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>getRequestCount</name></member>
      <member refid="classBinance_1_1API_1ae1688d4d245b8f22a87c7afb1db5432a" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>getTransfered</name></member>
      <member refid="classBinance_1_1API_1a9afbbfbd53c700745bba158493cfb541" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>highstock</name></member>
      <member refid="classBinance_1_1API_1a597ed694e6371dfd44acc1787d34b33b" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>history</name></member>
      <member refid="classBinance_1_1API_1a697f5b28ecf517a7a7ddcdaaf93bc2ad" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>httpRequest</name></member>
      <member refid="classBinance_1_1API_1a2a29ca9ab18d04ff2e42aa6e5e0ce312" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>keepAlive</name></member>
      <member refid="classBinance_1_1API_1ad3c68f4e2c1e05f08e147083e9abd5d4" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>last</name></member>
      <member refid="classBinance_1_1API_1a0fa240adf5da87c6b39ce8ba9c9925be" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketBuy</name></member>
      <member refid="classBinance_1_1API_1ab97b393885bf23255396c26351c3bae0" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketBuyTest</name></member>
      <member refid="classBinance_1_1API_1a372c642283c163b018bc5c0cbebfccfd" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketSell</name></member>
      <member refid="classBinance_1_1API_1a572ddd85dd67b768a59e9d84bcdc1dfb" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>marketSellTest</name></member>
      <member refid="classBinance_1_1API_1a8598ca4e53938db8998d143563044377" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>miniTicker</name></member>
      <member refid="classBinance_1_1API_1aaf2a8365d8f8a4a336c422183cddd0bf" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>openOrders</name></member>
      <member refid="classBinance_1_1API_1a672f348fa579428bc57e7f3673214c0c" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>order</name></member>
      <member refid="classBinance_1_1API_1a7d7f83f4843ad13d1ee812a9ca08facb" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>orders</name></member>
      <member refid="classBinance_1_1API_1adc33d167e8c8fa8aba1831de948b1558" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>orderStatus</name></member>
      <member refid="classBinance_1_1API_1a018a1002f7346fe83f37325174cefe2d" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>prevDay</name></member>
      <member refid="classBinance_1_1API_1a800848d5a50512be2bb5a5180d953f7b" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>priceData</name></member>
      <member refid="classBinance_1_1API_1a718271dc0691ae3a1f60dc0e7ad89698" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>prices</name></member>
      <member refid="classBinance_1_1API_1aebb5a164303af16e66c2b9281f45a315" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>sell</name></member>
      <member refid="classBinance_1_1API_1a34b5e813092766a1dd546eedf77cbde5" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>sellTest</name></member>
      <member refid="classBinance_1_1API_1aaeffb0ae4ae4b57030b5e586af9796c7" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>setProxy</name></member>
      <member refid="classBinance_1_1API_1a9c3424a8cf17d79552afbfa1a8942c85" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>setupApiConfigFromFile</name></member>
      <member refid="classBinance_1_1API_1a976f2c24c8e05a28f45814ceeacdf165" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>setupProxyConfigFromFile</name></member>
      <member refid="classBinance_1_1API_1a01035d97174324ba1575440e28bbc02e" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>sortDepth</name></member>
      <member refid="classBinance_1_1API_1a86ce0b32d5df8c23a88364f56b1d9e2d" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>ticker</name></member>
      <member refid="classBinance_1_1API_1a032befc6598403b6b2cd33016dc3a114" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>tickerStreamHandler</name></member>
      <member refid="classBinance_1_1API_1afd72d19a5504b1a0a694ca9a8af1047b" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>time</name></member>
      <member refid="classBinance_1_1API_1ae760a0c3d8d95dcef8acad5639f5b661" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>trades</name></member>
      <member refid="classBinance_1_1API_1a31c51812e766866a7b6ddfcddf11fbe5" prot="private" virt="non-virtual"><scope>Binance::API</scope><name>tradesData</name></member>
      <member refid="classBinance_1_1API_1af033a40a6a86ad422c58d67dc57bb0fd" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>userData</name></member>
      <member refid="classBinance_1_1API_1abcc2a5c9ca76dd659db43aec7a0a9a5f" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>useServerTime</name></member>
      <member refid="classBinance_1_1API_1adcfbb41f48480958d59f547c61308acc" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>withdraw</name></member>
      <member refid="classBinance_1_1API_1a28af87f4769cdc6be3328b4f1b4e1ca4" prot="public" virt="non-virtual"><scope>Binance::API</scope><name>withdrawHistory</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
