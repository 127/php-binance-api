.TH "Binance\API" 3 "Thu Mar 29 2018" "PHP Binance Api" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Binance\API \- 
.PP
Main Binance class\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fB__construct\fP ($api_key= '', $api_secret= '', $options=['useServerTime'=>false], $proxyConf=null)"
.br
.RI "\fIConstructor for the class, There are 4 ways to contruct the class: \fP"
.ti -1c
.RI "\fBbuy\fP ($symbol, $quantity, $price, $type='LIMIT', $flags=[])"
.br
.RI "\fIbuy attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER \fP"
.ti -1c
.RI "\fBbuyTest\fP ($symbol, $quantity, $price, $type='LIMIT', $flags=[])"
.br
.RI "\fIbuyTest attempts to create a TEST currency order \fP"
.ti -1c
.RI "\fBsell\fP ($symbol, $quantity, $price, $type='LIMIT', $flags=[])"
.br
.RI "\fIsell attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER \fP"
.ti -1c
.RI "\fBsellTest\fP ($symbol, $quantity, $price, $type='LIMIT', $flags=[])"
.br
.RI "\fIsellTest attempts to create a TEST currency order \fP"
.ti -1c
.RI "\fBmarketBuy\fP ($symbol, $quantity, $flags=[])"
.br
.RI "\fImarketBuy attempts to create a currency order at given market price \fP"
.ti -1c
.RI "\fBmarketBuyTest\fP ($symbol, $quantity, $flags=[])"
.br
.RI "\fImarketBuyTest attempts to create a TEST currency order at given market price \fP"
.ti -1c
.RI "\fBmarketSell\fP ($symbol, $quantity, $flags=[])"
.br
.RI "\fImarketSell attempts to create a currency order at given market price \fP"
.ti -1c
.RI "\fBmarketSellTest\fP ($symbol, $quantity, $flags=[])"
.br
.RI "\fImarketSellTest attempts to create a TEST currency order at given market price \fP"
.ti -1c
.RI "\fBcancel\fP ($symbol, $orderid)"
.br
.RI "\fIcancel attempts to cancel a currency order \fP"
.ti -1c
.RI "\fBorderStatus\fP ($symbol, $orderid)"
.br
.RI "\fIorderStatus attempts to get orders status \fP"
.ti -1c
.RI "\fBopenOrders\fP ($symbol=null)"
.br
.RI "\fIopenOrders attempts to get open orders for all currencies or a specific currency \fP"
.ti -1c
.RI "\fBorders\fP ($symbol, $limit=500, $fromOrderId=1)"
.br
.RI "\fIorders attempts to get the orders for all or a specific currency \fP"
.ti -1c
.RI "\fBhistory\fP ($symbol, $limit=500, $fromTradeId=1)"
.br
.RI "\fIhistory Get the complete account trade history for all or a specific currency \fP"
.ti -1c
.RI "\fBuseServerTime\fP ()"
.br
.RI "\fIuseServerTime adds the 'useServerTime'=>true to the API request to avoid time errors \fP"
.ti -1c
.RI "\fBtime\fP ()"
.br
.RI "\fItime Gets the server time \fP"
.ti -1c
.RI "\fBexchangeInfo\fP ()"
.br
.RI "\fIexchangeInfo Gets the complete exchange info, including limits, currency options etc\&. \fP"
.ti -1c
.RI "\fBwithdraw\fP ($asset, $address, $amount, $addressTag=false)"
.br
.RI "\fIwithdraw requests a asset be withdrawn from binance to another wallet \fP"
.ti -1c
.RI "\fBdepositAddress\fP ($asset)"
.br
.RI "\fIdepositAddress get the deposit address for an asset \fP"
.ti -1c
.RI "\fBdepositHistory\fP ($asset=false)"
.br
.RI "\fIdepositAddress get the deposit history for an asset \fP"
.ti -1c
.RI "\fBwithdrawHistory\fP ($asset=false)"
.br
.RI "\fIwithdrawHistory get the withdrawal history for an asset \fP"
.ti -1c
.RI "\fBprices\fP ()"
.br
.RI "\fIprices get all the current prices \fP"
.ti -1c
.RI "\fBbookPrices\fP ()"
.br
.RI "\fIbookPrices get all bid/asks prices \fP"
.ti -1c
.RI "\fBaccount\fP ()"
.br
.RI "\fIaccount get all information about the api account \fP"
.ti -1c
.RI "\fBprevDay\fP ($symbol)"
.br
.RI "\fIprevDay get 24hr ticker price change statistics for a symbol \fP"
.ti -1c
.RI "\fBaggTrades\fP ($symbol)"
.br
.RI "\fIaggTrades get Market History / Aggregate Trades \fP"
.ti -1c
.RI "\fBdepth\fP ($symbol)"
.br
.RI "\fIdepth get Market depth \fP"
.ti -1c
.RI "\fBbalances\fP ($priceData=false)"
.br
.RI "\fIbalances get balances for the account assets \fP"
.ti -1c
.RI "\fBgetProxyUriString\fP ()"
.br
.RI "\fIgetProxyUriString get Uniform Resource Identifier string assocaited with proxy config \fP"
.ti -1c
.RI "\fBsetProxy\fP ($proxyconf)"
.br
.RI "\fIsetProxy set proxy config by passing in an array of the proxy configuration \fP"
.ti -1c
.RI "\fBorder\fP ($side, $symbol, $quantity, $price, $type='LIMIT', $flags=[], $test=false)"
.br
.RI "\fIorder formats the orders before sending them to the curl wrapper function You can call this function directly or use the helper functions \fP"
.ti -1c
.RI "\fBcandlesticks\fP ($symbol, $interval='5m', $limit=null, $startTime=null, $endTime=null)"
.br
.RI "\fIcandlesticks get the cancles for the given intervals 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M \fP"
.ti -1c
.RI "\fBcumulative\fP ($\fBdepth\fP)"
.br
.RI "\fIcumulative Converts depth cache into a cumulative array \fP"
.ti -1c
.RI "\fBhighstock\fP ($\fBchart\fP, $include_volume=false)"
.br
.RI "\fIhighstock Converts Chart Data into array for highstock & kline charts \fP"
.ti -1c
.RI "\fBfirst\fP ($array)"
.br
.RI "\fIfirst Gets first key of an array \fP"
.ti -1c
.RI "\fBlast\fP ($array)"
.br
.RI "\fIlast Gets last key of an array \fP"
.ti -1c
.RI "\fBdisplayDepth\fP ($array)"
.br
.RI "\fIdisplayDepth Formats nicely for console output \fP"
.ti -1c
.RI "\fBgetTransfered\fP ()"
.br
.RI "\fIgetTransfered gets the total transfered in b,Kb,Mb,Gb \fP"
.ti -1c
.RI "\fBgetRequestCount\fP ()"
.br
.RI "\fIgetRequestCount gets the total number of API calls \fP"
.ti -1c
.RI "\fBaddToTransfered\fP ($int)"
.br
.RI "\fIaddToTransfered add interger bytes to the total transfered also incrementes the api counter \fP"
.ti -1c
.RI "\fBsortDepth\fP ($symbol, $limit=11)"
.br
.RI "\fIsortDepth Sorts depth data for display & getting highest bid and lowest ask \fP"
.ti -1c
.RI "\fBdepthCache\fP ($symbols, $callback)"
.br
.RI "\fIdepthCache Pulls /depth data and subscribes to  WebSocket endpoint Maintains a local Depth Cache in sync via lastUpdateId\&. \fP"
.ti -1c
.RI "\fBtrades\fP ($symbols, $callback)"
.br
.RI "\fItrades Trades WebSocket Endpoint \fP"
.ti -1c
.RI "\fBticker\fP ($symbol, $callback)"
.br
.RI "\fIticker pulls 24h price change statistics via WebSocket \fP"
.ti -1c
.RI "\fBchart\fP ($symbols, $interval='30m', $callback)"
.br
.RI "\fIchart Pulls /kline data and subscribes to  WebSocket endpoint \fP"
.ti -1c
.RI "\fBkeepAlive\fP ()"
.br
.RI "\fIkeepAlive Keep-alive function for userDataStream \fP"
.ti -1c
.RI "\fBuserData\fP (&$balance_callback, &$execution_callback=false)"
.br
.RI "\fIuserData Issues userDataStream token and keepalive, subscribes to userData WebSocket \fP"
.ti -1c
.RI "\fBminiTicker\fP ($callback)"
.br
.RI "\fIminiTicker Get miniTicker for all symbols \fP"
.in -1c
.SS "Public Attributes"

.in +1c
.ti -1c
.RI "\fB$httpDebug\fP = false"
.br
.RI "\fIIf you enable this, curl will output debugging information\&. \fP"
.ti -1c
.RI "\fB$balances\fP = []"
.br
.RI "\fIbinace balances from the last run \fP"
.ti -1c
.RI "\fB$btc_value\fP = 0\&.00"
.br
.RI "\fIvalue of available assets \fP"
.ti -1c
.RI "\fB$btc_total\fP = 0\&.00"
.br
.RI "\fIvalue of available + onOrder assets \fP"
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "\fB$base\fP = 'https://api\&.binance\&.com/api/'"
.br
.RI "\fIREST endpoint for the currency exchange\&. \fP"
.ti -1c
.RI "\fB$wapi\fP = 'https://api\&.binance\&.com/wapi/'"
.br
.RI "\fIREST endpoint for the withdrawals\&. \fP"
.ti -1c
.RI "\fB$api_key\fP"
.br
.RI "\fIAPI key that you created in the binance website member area\&. \fP"
.ti -1c
.RI "\fB$api_secret\fP"
.br
.RI "\fIAPI secret that was given to you when you created the api key\&. \fP"
.ti -1c
.RI "\fB$depthCache\fP = []"
.br
.RI "\fIWebsockets depth cache\&. \fP"
.ti -1c
.RI "\fB$depthQueue\fP = []"
.br
.RI "\fIWebsockets depth queue\&. \fP"
.ti -1c
.RI "\fB$chartQueue\fP = []"
.br
.RI "\fIWebsockets chart queue\&. \fP"
.ti -1c
.RI "\fB$charts\fP = []"
.br
.RI "\fIWebsockets chart data\&. \fP"
.ti -1c
.RI "\fB$info\fP = ['timeOffset'=>0]"
.br
.RI "\fIAdditional connection options\&. \fP"
.ti -1c
.RI "\fB$proxyConf\fP = null"
.br
.RI "\fIUsed for story the proxy configuration\&. \fP"
.ti -1c
.RI "\fB$transfered\fP = 0"
.br
.RI "\fIThis stores the amount of bytes transfered\&. \fP"
.ti -1c
.RI "\fB$requestCount\fP = 0"
.br
.RI "\fIThis stores the amount of API requests\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
Main Binance class\&. 

Eg\&. Usage: require 'vendor/autoload\&.php'; $api = new Binance\\API(); 
.PP
Definition at line 20 of file php-binance-api\&.php\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Binance\\API::__construct ($api_key = \fC''\fP, $api_secret = \fC''\fP, $options = \fC['useServerTime'=\fP, false], $proxyConf = \fCnull\fP)"

.PP
Constructor for the class, There are 4 ways to contruct the class: 
.IP "\(bu" 2
You can use the config file in ~/jaggedsoft/php-binance-api\&.json and empty contructor
.IP "\(bu" 2
new Binance\\API( $api_key, $api_secret);
.IP "\(bu" 2
new Binance\\API( $api_key, $api_secret, $options);
.IP "\(bu" 2
new Binance\\API( $api_key, $api_secret, $options, $proxyConf);
.PP
\fBParameters:\fP
.RS 4
\fI$api_key\fP string api key 
.br
\fI$api_secret\fP string api secret 
.br
\fI$options\fP array addtional coniguration options 
.br
\fI$proxyConf\fP array config 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP

.PP
Definition at line 51 of file php-binance-api\&.php\&.
.SH "Member Function Documentation"
.PP 
.SS "Binance\\API::account ()"

.PP
account get all information about the api account $account = $api->account();
.PP
\fBReturns:\fP
.RS 4
array with error message or array of all the account information 
.RE
.PP

.PP
Definition at line 468 of file php-binance-api\&.php\&.
.SS "Binance\\API::addToTransfered ($int)"

.PP
addToTransfered add interger bytes to the total transfered also incrementes the api counter $apiCount = $api->addToTransfered( $int );
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1191 of file php-binance-api\&.php\&.
.SS "Binance\\API::aggTrades ($symbol)"

.PP
aggTrades get Market History / Aggregate Trades $trades = $api->aggTrades('BNBBTC');
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the symbol to get the trade information for 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array of market history 
.RE
.PP

.PP
Definition at line 492 of file php-binance-api\&.php\&.
.SS "Binance\\API::balances ($priceData = \fCfalse\fP)"

.PP
balances get balances for the account assets $balances = $api->balances($ticker);
.PP
\fBParameters:\fP
.RS 4
\fI$priceData\fP array of the symbols balances are required for 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array of balances 
.RE
.PP

.PP
Definition at line 524 of file php-binance-api\&.php\&.
.SS "Binance\\API::bookPrices ()"

.PP
bookPrices get all bid/asks prices $ticker = $api->bookPrices();
.PP
\fBReturns:\fP
.RS 4
array with error message or array of all the book prices 
.RE
.PP

.PP
Definition at line 457 of file php-binance-api\&.php\&.
.SS "Binance\\API::buy ($symbol, $quantity, $price, $type = \fC'LIMIT'\fP, $flags = \fC[]\fP)"

.PP
buy attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER You should check the 
.PP
\fBSee Also:\fP
.RS 4
exchangeInfo for each currency to determine what types of orders can be placed against specific pairs
.RE
.PP
$quantity = 1; $price = 0\&.0005; $order = $api->buy('BNBBTC', $quantity, $price);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$price\fP price per unit you want to spend 
.br
\fI$type\fP string type of order 
.br
\fI$flags\fP array addtional options for order type 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 125 of file php-binance-api\&.php\&.
.SS "Binance\\API::buyTest ($symbol, $quantity, $price, $type = \fC'LIMIT'\fP, $flags = \fC[]\fP)"

.PP
buyTest attempts to create a TEST currency order 
.PP
\fBSee Also:\fP
.RS 4
buy()
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$price\fP price per unit you want to spend 
.br
\fI$type\fP array config 
.br
\fI$flags\fP array config 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or empty or the order details 
.RE
.PP

.PP
Definition at line 140 of file php-binance-api\&.php\&.
.SS "Binance\\API::cancel ($symbol, $orderid)"

.PP
cancel attempts to cancel a currency order $orderid = '123456789'; $order = $api->cancel('BNBBTC', $orderid);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$orderid\fP the orderid to cancel 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 254 of file php-binance-api\&.php\&.
.SS "Binance\\API::candlesticks ($symbol, $interval = \fC'5m'\fP, $limit = \fCnull\fP, $startTime = \fCnull\fP, $endTime = \fCnull\fP)"

.PP
candlesticks get the cancles for the given intervals 1m,3m,5m,15m,30m,1h,2h,4h,6h,8h,12h,1d,3d,1w,1M $candles = $api->candlesticks('BNBBTC', '5m');
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP to query 
.br
\fI$interval\fP to request 
.br
\fI$limit\fP limit the amount of candles 
.br
\fI$startTime\fP request candle information starting from here 
.br
\fI$endTime\fP request candle information ending here 
.RE
.PP
\fBReturns:\fP
.RS 4
array containing the response 
.RE
.PP

.PP
Definition at line 784 of file php-binance-api\&.php\&.
.SS "Binance\\API::chart ($symbols, $interval = \fC'30m'\fP, $callback)"

.PP
chart Pulls /kline data and subscribes to  WebSocket endpoint $api->chart(['BNBBTC'], '15m', function($api, $symbol, $chart) { echo '{$symbol} chart update\\n'; print_r($chart); });
.PP
\fBParameters:\fP
.RS 4
\fI$symbols\fP required symbols 
.br
\fI$interval\fP time inteval 
.br
\fI$callback\fP closure 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1418 of file php-binance-api\&.php\&.
.SS "Binance\\API::cumulative ($depth)"

.PP
cumulative Converts depth cache into a cumulative array $cumulative = $api->cumulative($depth);
.PP
\fBParameters:\fP
.RS 4
\fI$depth\fP cache array 
.RE
.PP
\fBReturns:\fP
.RS 4
array cumulative depth cache 
.RE
.PP

.PP
Definition at line 1045 of file php-binance-api\&.php\&.
.SS "Binance\\API::depositAddress ($asset)"

.PP
depositAddress get the deposit address for an asset $depositAddress = $api->depositAddress('VEN');
.PP
\fBParameters:\fP
.RS 4
\fI$asset\fP the currency such as BTC 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array deposit address information 
.RE
.PP

.PP
Definition at line 392 of file php-binance-api\&.php\&.
.SS "Binance\\API::depositHistory ($asset = \fCfalse\fP)"

.PP
depositAddress get the deposit history for an asset $depositHistory = $api->depositHistory();
.PP
$depositHistory = $api->depositHistory( 'BTC' );
.PP
\fBParameters:\fP
.RS 4
\fI$asset\fP empty or the currency such as BTC 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array deposit history information 
.RE
.PP

.PP
Definition at line 407 of file php-binance-api\&.php\&.
.SS "Binance\\API::depth ($symbol)"

.PP
depth get Market depth $depth = $api->depth('ETHBTC');
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the symbol to get the depth information for 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array of market depth 
.RE
.PP

.PP
Definition at line 504 of file php-binance-api\&.php\&.
.SS "Binance\\API::depthCache ($symbols, $callback)"

.PP
depthCache Pulls /depth data and subscribes to  WebSocket endpoint Maintains a local Depth Cache in sync via lastUpdateId\&. See depth() and depthHandler()
.PP
$api->depthCache(['BNBBTC'], function($api, $symbol, $depth) { echo '{$symbol} depth cache update'\&.PHP_EOL; //print_r($depth); // Print all depth data $limit = 11; // Show only the closest asks/bids $sorted = $api->sortDepth($symbol, $limit); $bid = $api->first($sorted['bids']); $ask = $api->first($sorted['asks']); echo $api->displayDepth($sorted); echo 'ask: {$ask}'\&.PHP_EOL; echo 'bid: {$bid}'\&.PHP_EOL; });
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP optional array of symbols 
.br
\fI$callback\fP closure 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1288 of file php-binance-api\&.php\&.
.SS "Binance\\API::displayDepth ($array)"

.PP
displayDepth Formats nicely for console output $outputString = $api->displayDepth($array);
.PP
\fBParameters:\fP
.RS 4
\fI$array\fP array 
.RE
.PP
\fBReturns:\fP
.RS 4
string of the depth information 
.RE
.PP

.PP
Definition at line 1123 of file php-binance-api\&.php\&.
.SS "Binance\\API::exchangeInfo ()"

.PP
exchangeInfo Gets the complete exchange info, including limits, currency options etc\&. $info = $api->exchangeInfo();
.PP
\fBReturns:\fP
.RS 4
array with error message or exchange info array 
.RE
.PP

.PP
Definition at line 350 of file php-binance-api\&.php\&.
.SS "Binance\\API::first ($array)"

.PP
first Gets first key of an array $first = $api->first($array);
.PP
\fBParameters:\fP
.RS 4
\fI$array\fP array 
.RE
.PP
\fBReturns:\fP
.RS 4
string key or null 
.RE
.PP

.PP
Definition at line 1093 of file php-binance-api\&.php\&.
.SS "Binance\\API::getProxyUriString ()"

.PP
getProxyUriString get Uniform Resource Identifier string assocaited with proxy config $balances = $api->getProxyUriString();
.PP
\fBReturns:\fP
.RS 4
string uri 
.RE
.PP

.PP
Definition at line 535 of file php-binance-api\&.php\&.
.SS "Binance\\API::getRequestCount ()"

.PP
getRequestCount gets the total number of API calls $apiCount = $api->getRequestCount();
.PP
\fBReturns:\fP
.RS 4
int get the total number of api calls 
.RE
.PP

.PP
Definition at line 1179 of file php-binance-api\&.php\&.
.SS "Binance\\API::getTransfered ()"

.PP
getTransfered gets the total transfered in b,Kb,Mb,Gb $transfered = $api->getTransfered();
.PP
\fBReturns:\fP
.RS 4
string showing the total transfered 
.RE
.PP

.PP
Definition at line 1166 of file php-binance-api\&.php\&.
.SS "Binance\\API::highstock ($chart, $include_volume = \fCfalse\fP)"

.PP
highstock Converts Chart Data into array for highstock & kline charts $highstock = $api->highstock($chart, $include_volume);
.PP
\fBParameters:\fP
.RS 4
\fI$chart\fP array 
.br
\fI$include_volume\fP bool for inclusion of volume 
.RE
.PP
\fBReturns:\fP
.RS 4
array highchart data 
.RE
.PP

.PP
Definition at line 1069 of file php-binance-api\&.php\&.
.SS "Binance\\API::history ($symbol, $limit = \fC500\fP, $fromTradeId = \fC1\fP)"

.PP
history Get the complete account trade history for all or a specific currency $allHistory = $api->history(); $BNBHistory = $api->history('BNBBTC'); $limitBNBHistory = $api->history('BNBBTC',5); $limitBNBHistoryFromId = $api->history('BNBBTC',5,3);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$limit\fP the amount of orders returned 
.br
\fI$fromTradeId\fP return the orders from this order onwards 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array of orderDetails array 
.RE
.PP

.PP
Definition at line 316 of file php-binance-api\&.php\&.
.SS "Binance\\API::keepAlive ()"

.PP
keepAlive Keep-alive function for userDataStream $api->keepAlive();
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1468 of file php-binance-api\&.php\&.
.SS "Binance\\API::last ($array)"

.PP
last Gets last key of an array $last = $api->last($array);
.PP
\fBParameters:\fP
.RS 4
\fI$array\fP array 
.RE
.PP
\fBReturns:\fP
.RS 4
string key or null 
.RE
.PP

.PP
Definition at line 1108 of file php-binance-api\&.php\&.
.SS "Binance\\API::marketBuy ($symbol, $quantity, $flags = \fC[]\fP)"

.PP
marketBuy attempts to create a currency order at given market price $quantity = 1; $order = $api->marketBuy('BNBBTC', $quantity);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$flags\fP array addtional options for order type 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 199 of file php-binance-api\&.php\&.
.SS "Binance\\API::marketBuyTest ($symbol, $quantity, $flags = \fC[]\fP)"

.PP
marketBuyTest attempts to create a TEST currency order at given market price 
.PP
\fBSee Also:\fP
.RS 4
marketBuy()
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$flags\fP array addtional options for order type 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 212 of file php-binance-api\&.php\&.
.SS "Binance\\API::marketSell ($symbol, $quantity, $flags = \fC[]\fP)"

.PP
marketSell attempts to create a currency order at given market price $quantity = 1; $order = $api->marketSell('BNBBTC', $quantity);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$flags\fP array addtional options for order type 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 227 of file php-binance-api\&.php\&.
.SS "Binance\\API::marketSellTest ($symbol, $quantity, $flags = \fC[]\fP)"

.PP
marketSellTest attempts to create a TEST currency order at given market price 
.PP
\fBSee Also:\fP
.RS 4
marketSellTest()
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$flags\fP array addtional options for order type 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 240 of file php-binance-api\&.php\&.
.SS "Binance\\API::miniTicker ($callback)"

.PP
miniTicker Get miniTicker for all symbols $api->miniTicker(function($api, $ticker) { print_r($ticker); }); 
.PP
\fBParameters:\fP
.RS 4
\fI$callback\fP function closer that takes 2 arguments, $pai and $ticker data 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1550 of file php-binance-api\&.php\&.
.SS "Binance\\API::openOrders ($symbol = \fCnull\fP)"

.PP
openOrders attempts to get open orders for all currencies or a specific currency $allOpenOrders = $api->openOrders(); $allBNBOrders = $api->openOrders( 'BNBBTC' );
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 281 of file php-binance-api\&.php\&.
.SS "Binance\\API::order ($side, $symbol, $quantity, $price, $type = \fC'LIMIT'\fP, $flags = \fC[]\fP, $test = \fCfalse\fP)"

.PP
order formats the orders before sending them to the curl wrapper function You can call this function directly or use the helper functions 
.PP
\fBSee Also:\fP
.RS 4
buy 
.PP
sell 
.PP
marketBuy 
.PP
marketSell
.RE
.PP
$this->httpRequest( 'https://api\&.binance\&.com/api/v1/ticker/24hr');
.PP
\fBParameters:\fP
.RS 4
\fI$side\fP typically 'BUY' or 'SELL' 
.br
\fI$symbol\fP to buy or sell 
.br
\fI$quantity\fP in the order 
.br
\fI$price\fP for the order 
.br
\fI$type\fP is determined by the symbol bu typicall LIMIT, STOP_LOSS_LIMIT etc\&. 
.br
\fI$flags\fP additional transaction options 
.br
\fI$test\fP whether to test or not, test only validates the query 
.RE
.PP
\fBReturns:\fP
.RS 4
array containing the response 
.RE
.PP

.PP
Definition at line 706 of file php-binance-api\&.php\&.
.SS "Binance\\API::orders ($symbol, $limit = \fC500\fP, $fromOrderId = \fC1\fP)"

.PP
orders attempts to get the orders for all or a specific currency $allBNBOrders = $api->orders( 'BNBBTC' );
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$limit\fP the amount of orders returned 
.br
\fI$fromOrderId\fP return the orders from this order onwards 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array of orderDetails array 
.RE
.PP

.PP
Definition at line 299 of file php-binance-api\&.php\&.
.SS "Binance\\API::orderStatus ($symbol, $orderid)"

.PP
orderStatus attempts to get orders status $orderid = '123456789'; $order = $api->orderStatus('BNBBTC', $orderid);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$orderid\fP the orderid to cancel 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 268 of file php-binance-api\&.php\&.
.SS "Binance\\API::prevDay ($symbol)"

.PP
prevDay get 24hr ticker price change statistics for a symbol $prevDay = $api->prevDay('BNBBTC');
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the symbol to get the previous day change for 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array of prevDay change 
.RE
.PP

.PP
Definition at line 480 of file php-binance-api\&.php\&.
.SS "Binance\\API::prices ()"

.PP
prices get all the current prices $ticker = $api->prices();
.PP
\fBReturns:\fP
.RS 4
array with error message or array of all the currencies prices 
.RE
.PP

.PP
Definition at line 446 of file php-binance-api\&.php\&.
.SS "Binance\\API::sell ($symbol, $quantity, $price, $type = \fC'LIMIT'\fP, $flags = \fC[]\fP)"

.PP
sell attempts to create a currency order each currency supports a number of order types, such as -LIMIT -MARKET -STOP_LOSS -STOP_LOSS_LIMIT -TAKE_PROFIT -TAKE_PROFIT_LIMIT -LIMIT_MAKER You should check the 
.PP
\fBSee Also:\fP
.RS 4
exchangeInfo for each currency to determine what types of orders can be placed against specific pairs
.RE
.PP
$quantity = 1; $price = 0\&.0005; $order = $api->sell('BNBBTC', $quantity, $price);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$price\fP price per unit you want to spend 
.br
\fI$type\fP string type of order 
.br
\fI$flags\fP array addtional options for order type 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or the order details 
.RE
.PP

.PP
Definition at line 169 of file php-binance-api\&.php\&.
.SS "Binance\\API::sellTest ($symbol, $quantity, $price, $type = \fC'LIMIT'\fP, $flags = \fC[]\fP)"

.PP
sellTest attempts to create a TEST currency order 
.PP
\fBSee Also:\fP
.RS 4
sell()
.RE
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP the currency symbol 
.br
\fI$quantity\fP the quantity required 
.br
\fI$price\fP price per unit you want to spend 
.br
\fI$type\fP array config 
.br
\fI$flags\fP array config 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or empty or the order details 
.RE
.PP

.PP
Definition at line 184 of file php-binance-api\&.php\&.
.SS "Binance\\API::setProxy ($proxyconf)"

.PP
setProxy set proxy config by passing in an array of the proxy configuration $proxyConf = [ 'proto' => 'tcp', 'address' => '192\&.168\&.1\&.1', 'port' => '8080', 'user' => 'dude', 'pass' => 'd00d' ];
.PP
$api->setProxy( $proxyconf );
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 577 of file php-binance-api\&.php\&.
.SS "Binance\\API::sortDepth ($symbol, $limit = \fC11\fP)"

.PP
sortDepth Sorts depth data for display & getting highest bid and lowest ask $sorted = $api->sortDepth($symbol, $limit);
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP to sort 
.br
\fI$limit\fP depth 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1260 of file php-binance-api\&.php\&.
.SS "Binance\\API::ticker ($symbol, $callback)"

.PP
ticker pulls 24h price change statistics via WebSocket $api->ticker(false, function($api, $symbol, $ticker) { print_r($ticker); });
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP optional symbol or false 
.br
\fI$callback\fP closure 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1382 of file php-binance-api\&.php\&.
.SS "Binance\\API::time ()"

.PP
time Gets the server time $time = $api->time();
.PP
\fBReturns:\fP
.RS 4
array with error message or array with server time key 
.RE
.PP

.PP
Definition at line 339 of file php-binance-api\&.php\&.
.SS "Binance\\API::trades ($symbols, $callback)"

.PP
trades Trades WebSocket Endpoint $api->trades(['BNBBTC'], function($api, $symbol, $trades) { echo '{$symbol} trades update'\&.PHP_EOL; print_r($trades); });
.PP
\fBParameters:\fP
.RS 4
\fI$symbol\fP optional symbol 
.br
\fI$callback\fP closure 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1339 of file php-binance-api\&.php\&.
.SS "Binance\\API::userData (&$balance_callback, &$execution_callback = \fCfalse\fP)"

.PP
userData Issues userDataStream token and keepalive, subscribes to userData WebSocket $balance_update = function($api, $balances) { print_r($balances); echo 'Balance update'\&.PHP_EOL; };
.PP
$order_update = function($api, $report) { echo 'Order update'\&.PHP_EOL; print_r($report); $price = $report['price']; $quantity = $report['quantity']; $symbol = $report['symbol']; $side = $report['side']; $orderType = $report['orderType']; $orderId = $report['orderId']; $orderStatus = $report['orderStatus']; $executionType = $report['orderStatus']; if( $executionType == 'NEW' ) { if( $executionType == 'REJECTED' ) { echo 'Order Failed! Reason: {$report['rejectReason']}'\&.PHP_EOL; } echo '{$symbol} {$side} {$orderType} ORDER #{$orderId} ({$orderStatus})'\&.PHP_EOL; echo '\&.\&.price: {$price}, quantity: {$quantity}'\&.PHP_EOL; return; }
.PP
//NEW, CANCELED, REPLACED, REJECTED, TRADE, EXPIRED echo '{$symbol} {$side} {$executionType} {$orderType} ORDER #{$orderId}'\&.PHP_EOL; }; $api->userData($balance_update, $order_update);
.PP
\fBParameters:\fP
.RS 4
\fI$balance_callback\fP function 
.br
\fI$execution_callback\fP function 
.RE
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 1514 of file php-binance-api\&.php\&.
.SS "Binance\\API::useServerTime ()"

.PP
useServerTime adds the 'useServerTime'=>true to the API request to avoid time errors $api->useServerTime();
.PP
\fBReturns:\fP
.RS 4
nothing 
.RE
.PP

.PP
Definition at line 327 of file php-binance-api\&.php\&.
.SS "Binance\\API::withdraw ($asset, $address, $amount, $addressTag = \fCfalse\fP)"

.PP
withdraw requests a asset be withdrawn from binance to another wallet $asset = 'BTC'; $address = '1C5gqLRs96Xq4V2ZZAR1347yUCpHie7sa'; $amount = 0\&.2; $response = $api->withdraw($asset, $address, $amount);
.PP
$address = '44tLjmXrQNrWJ5NBsEj2R77ZBEgDa3fEe9GLpSf2FRmhexPvfYDUAB7EXX1Hdb3aMQ9FLqdJ56yaAhiXoRsceGJCRS3Jxkn'; $addressTag = '0e5e38a01058dbf64e53a4333a5acf98e0d5feb8e523d32e3186c664a9c762c1'; $amount = 0\&.1; $response = $api->withdraw($asset, $address, $amount, $addressTag);
.PP
\fBParameters:\fP
.RS 4
\fI$asset\fP the currency such as BTC 
.br
\fI$address\fP the addressed to whihc the asset should be deposited 
.br
\fI$amount\fP the amount of the asset to transfer 
.br
\fI$addressTag\fP adtional transactionid required by some assets 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array transaction 
.RE
.PP

.PP
Definition at line 373 of file php-binance-api\&.php\&.
.SS "Binance\\API::withdrawHistory ($asset = \fCfalse\fP)"

.PP
withdrawHistory get the withdrawal history for an asset $withdrawHistory = $api->withdrawHistory();
.PP
$withdrawHistory = $api->withdrawHistory( 'BTC' );
.PP
\fBParameters:\fP
.RS 4
\fI$asset\fP empty or the currency such as BTC 
.RE
.PP
\fBReturns:\fP
.RS 4
array with error message or array deposit history information 
.RE
.PP

.PP
Definition at line 428 of file php-binance-api\&.php\&.
.SH "Member Data Documentation"
.PP 
.SS "Binance\\API::$api_key\fC [protected]\fP"

.PP
API key that you created in the binance website member area\&. 
.PP
Definition at line 23 of file php-binance-api\&.php\&.
.SS "Binance\\API::$api_secret\fC [protected]\fP"

.PP
API secret that was given to you when you created the api key\&. 
.PP
Definition at line 24 of file php-binance-api\&.php\&.
.SS "Binance\\API::$balances = []"

.PP
binace balances from the last run 
.PP
Definition at line 34 of file php-binance-api\&.php\&.
.SS "Binance\\API::$base = 'https://api\&.binance\&.com/api/'\fC [protected]\fP"

.PP
REST endpoint for the currency exchange\&. 
.PP
Definition at line 21 of file php-binance-api\&.php\&.
.SS "Binance\\API::$btc_total = 0\&.00"

.PP
value of available + onOrder assets 
.PP
Definition at line 36 of file php-binance-api\&.php\&.
.SS "Binance\\API::$btc_value = 0\&.00"

.PP
value of available assets 
.PP
Definition at line 35 of file php-binance-api\&.php\&.
.SS "Binance\\API::$chartQueue = []\fC [protected]\fP"

.PP
Websockets chart queue\&. 
.PP
Definition at line 27 of file php-binance-api\&.php\&.
.SS "Binance\\API::$charts = []\fC [protected]\fP"

.PP
Websockets chart data\&. 
.PP
Definition at line 28 of file php-binance-api\&.php\&.
.SS "Binance\\API::$depthCache = []\fC [protected]\fP"

.PP
Websockets depth cache\&. 
.PP
Definition at line 25 of file php-binance-api\&.php\&.
.SS "Binance\\API::$depthQueue = []\fC [protected]\fP"

.PP
Websockets depth queue\&. 
.PP
Definition at line 26 of file php-binance-api\&.php\&.
.SS "Binance\\API::$httpDebug = false"

.PP
If you enable this, curl will output debugging information\&. 
.PP
Definition at line 33 of file php-binance-api\&.php\&.
.SS "Binance\\API::$info = ['timeOffset'=>0]\fC [protected]\fP"

.PP
Additional connection options\&. 
.PP
Definition at line 29 of file php-binance-api\&.php\&.
.SS "Binance\\API::$proxyConf = null\fC [protected]\fP"

.PP
Used for story the proxy configuration\&. 
.PP
Definition at line 30 of file php-binance-api\&.php\&.
.SS "Binance\\API::$requestCount = 0\fC [protected]\fP"

.PP
This stores the amount of API requests\&. 
.PP
Definition at line 32 of file php-binance-api\&.php\&.
.SS "Binance\\API::$transfered = 0\fC [protected]\fP"

.PP
This stores the amount of bytes transfered\&. 
.PP
Definition at line 31 of file php-binance-api\&.php\&.
.SS "Binance\\API::$wapi = 'https://api\&.binance\&.com/wapi/'\fC [protected]\fP"

.PP
REST endpoint for the withdrawals\&. 
.PP
Definition at line 22 of file php-binance-api\&.php\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for PHP Binance Api from the source code\&.
